// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_AWGN (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        din_address0,
        din_ce0,
        din_q0,
        dout_address0,
        dout_ce0,
        dout_we0,
        dout_d0,
        grp_fu_965_p_din0,
        grp_fu_965_p_din1,
        grp_fu_965_p_dout0,
        grp_fu_965_p_ce,
        grp_fu_969_p_din0,
        grp_fu_969_p_din1,
        grp_fu_969_p_dout0,
        grp_fu_969_p_ce,
        grp_fu_973_p_din0,
        grp_fu_973_p_din1,
        grp_fu_973_p_dout0,
        grp_fu_973_p_ce,
        grp_fu_977_p_din0,
        grp_fu_977_p_din1,
        grp_fu_977_p_dout0,
        grp_fu_977_p_ce
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state33 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] din_address0;
output   din_ce0;
input  [63:0] din_q0;
output  [2:0] dout_address0;
output   dout_ce0;
output   dout_we0;
output  [63:0] dout_d0;
output  [63:0] grp_fu_965_p_din0;
output  [63:0] grp_fu_965_p_din1;
input  [63:0] grp_fu_965_p_dout0;
output   grp_fu_965_p_ce;
output  [63:0] grp_fu_969_p_din0;
output  [63:0] grp_fu_969_p_din1;
input  [63:0] grp_fu_969_p_dout0;
output   grp_fu_969_p_ce;
output  [63:0] grp_fu_973_p_din0;
output  [63:0] grp_fu_973_p_din1;
input  [63:0] grp_fu_973_p_dout0;
output   grp_fu_973_p_ce;
output  [63:0] grp_fu_977_p_din0;
output  [63:0] grp_fu_977_p_din1;
input  [63:0] grp_fu_977_p_dout0;
output   grp_fu_977_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg din_ce0;
reg dout_ce0;
reg dout_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] j_6_reg_1549;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
wire    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
wire    ap_block_state28_pp0_stage0_iter25;
wire    ap_block_state29_pp0_stage0_iter26;
wire    ap_block_state30_pp0_stage0_iter27;
wire    ap_block_state31_pp0_stage0_iter28;
wire    ap_block_state32_pp0_stage0_iter29;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] j_6_reg_1549_pp0_iter1_reg;
reg   [3:0] j_6_reg_1549_pp0_iter2_reg;
reg   [3:0] j_6_reg_1549_pp0_iter3_reg;
reg   [3:0] j_6_reg_1549_pp0_iter4_reg;
reg   [3:0] j_6_reg_1549_pp0_iter5_reg;
reg   [3:0] j_6_reg_1549_pp0_iter6_reg;
reg   [3:0] j_6_reg_1549_pp0_iter7_reg;
reg   [3:0] j_6_reg_1549_pp0_iter8_reg;
reg   [3:0] j_6_reg_1549_pp0_iter9_reg;
reg   [3:0] j_6_reg_1549_pp0_iter10_reg;
reg   [3:0] j_6_reg_1549_pp0_iter11_reg;
reg   [3:0] j_6_reg_1549_pp0_iter12_reg;
reg   [3:0] j_6_reg_1549_pp0_iter13_reg;
reg   [3:0] j_6_reg_1549_pp0_iter14_reg;
reg   [3:0] j_6_reg_1549_pp0_iter15_reg;
reg   [3:0] j_6_reg_1549_pp0_iter16_reg;
reg   [3:0] j_6_reg_1549_pp0_iter17_reg;
reg   [3:0] j_6_reg_1549_pp0_iter18_reg;
reg   [3:0] j_6_reg_1549_pp0_iter19_reg;
reg   [3:0] j_6_reg_1549_pp0_iter20_reg;
reg   [3:0] j_6_reg_1549_pp0_iter21_reg;
reg   [3:0] j_6_reg_1549_pp0_iter22_reg;
reg   [3:0] j_6_reg_1549_pp0_iter23_reg;
reg   [3:0] j_6_reg_1549_pp0_iter24_reg;
reg   [3:0] j_6_reg_1549_pp0_iter25_reg;
reg   [3:0] j_6_reg_1549_pp0_iter26_reg;
reg   [3:0] j_6_reg_1549_pp0_iter27_reg;
wire   [0:0] icmp_ln17_fu_630_p2;
reg   [0:0] icmp_ln17_reg_1555;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter1_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter2_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter3_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter4_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter5_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter6_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter7_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter8_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter9_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter10_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter11_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter12_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter13_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter14_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter15_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter16_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter17_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter18_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter19_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter20_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter21_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter22_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter23_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter24_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter25_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter26_reg;
reg   [0:0] icmp_ln17_reg_1555_pp0_iter27_reg;
wire   [0:0] trunc_ln229_fu_646_p1;
reg   [0:0] trunc_ln229_reg_1559;
wire   [63:0] tmp_uniform_fu_1276_p3;
reg   [63:0] tmp_uniform_reg_1583;
reg   [63:0] tmp_uniform_reg_1583_pp0_iter2_reg;
reg   [63:0] tmp_uniform_reg_1583_pp0_iter3_reg;
reg   [63:0] tmp_uniform_reg_1583_pp0_iter4_reg;
reg   [63:0] tmp_uniform_reg_1583_pp0_iter5_reg;
wire   [0:0] tmp_18_fu_566_p2;
reg   [0:0] tmp_18_reg_1591;
wire   [63:0] tmp_21_fu_446_p2;
reg   [63:0] tmp_21_reg_1596;
wire   [0:0] or_ln443_fu_1335_p2;
reg   [0:0] or_ln443_reg_1601;
reg   [0:0] or_ln443_reg_1601_pp0_iter3_reg;
reg   [0:0] or_ln443_reg_1601_pp0_iter4_reg;
reg   [0:0] or_ln443_reg_1601_pp0_iter5_reg;
wire   [0:0] and_ln443_fu_1341_p2;
reg   [0:0] and_ln443_reg_1606;
reg   [0:0] and_ln443_reg_1606_pp0_iter3_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter4_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter5_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter6_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter7_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter8_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter9_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter10_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter11_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter12_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter13_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter14_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter15_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter16_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter17_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter18_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter19_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter20_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter21_reg;
reg   [0:0] and_ln443_reg_1606_pp0_iter22_reg;
wire   [63:0] tmp_432_fu_1346_p3;
reg   [63:0] t1_reg_1617;
wire   [63:0] t2_fu_504_p2;
reg   [63:0] t2_reg_1622;
wire   [63:0] t3_fu_1362_p1;
wire   [0:0] or_ln443_4_fu_1372_p2;
reg   [0:0] or_ln443_4_reg_1632;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter7_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter8_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter9_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter10_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter11_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter12_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter13_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter14_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter15_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter16_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter17_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter18_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter19_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter20_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter21_reg;
reg   [0:0] or_ln443_4_reg_1632_pp0_iter22_reg;
wire   [63:0] z_fu_451_p2;
reg   [63:0] z_reg_1651;
wire   [63:0] z_9_fu_1377_p3;
reg   [63:0] z_9_reg_1658;
reg   [63:0] z_9_reg_1658_pp0_iter8_reg;
reg   [63:0] z_9_reg_1658_pp0_iter9_reg;
reg   [63:0] z_9_reg_1658_pp0_iter10_reg;
reg   [63:0] z_9_reg_1658_pp0_iter11_reg;
reg   [63:0] z_9_reg_1658_pp0_iter12_reg;
reg   [63:0] z_9_reg_1658_pp0_iter13_reg;
reg   [63:0] z_9_reg_1658_pp0_iter14_reg;
reg   [63:0] z_9_reg_1658_pp0_iter15_reg;
reg   [63:0] z_9_reg_1658_pp0_iter16_reg;
reg   [63:0] z_9_reg_1658_pp0_iter17_reg;
wire   [63:0] r_15_fu_1383_p3;
reg   [63:0] r_15_reg_1663;
reg   [63:0] r_15_reg_1663_pp0_iter8_reg;
reg   [63:0] r_15_reg_1663_pp0_iter9_reg;
reg   [63:0] r_15_reg_1663_pp0_iter10_reg;
reg   [63:0] r_15_reg_1663_pp0_iter11_reg;
reg   [63:0] r_15_reg_1663_pp0_iter12_reg;
reg   [63:0] r_15_reg_1663_pp0_iter13_reg;
reg   [63:0] r_15_reg_1663_pp0_iter14_reg;
reg   [63:0] r_15_reg_1663_pp0_iter15_reg;
wire   [63:0] t4_fu_513_p2;
reg   [63:0] t4_reg_1677;
wire   [63:0] t13_fu_517_p2;
reg   [63:0] t13_reg_1682;
wire   [63:0] t5_fu_456_p2;
reg   [63:0] t5_reg_1687;
wire   [63:0] t14_fu_460_p2;
reg   [63:0] t14_reg_1692;
wire   [63:0] t6_fu_521_p2;
reg   [63:0] t6_reg_1697;
wire   [63:0] t15_fu_525_p2;
reg   [63:0] t15_reg_1702;
wire   [63:0] t7_fu_464_p2;
reg   [63:0] t7_reg_1707;
wire   [63:0] t16_fu_468_p2;
reg   [63:0] t16_reg_1712;
wire   [63:0] t8_fu_529_p2;
reg   [63:0] t8_reg_1717;
wire   [63:0] t17_fu_533_p2;
reg   [63:0] t17_reg_1722;
wire   [63:0] t9_fu_472_p2;
reg   [63:0] t9_reg_1727;
wire   [63:0] f2_fu_476_p2;
reg   [63:0] f2_reg_1732;
reg   [63:0] f2_reg_1732_pp0_iter14_reg;
wire   [63:0] t10_fu_537_p2;
reg   [63:0] t10_reg_1738;
wire   [63:0] t18_fu_541_p2;
reg   [63:0] t18_reg_1743;
wire   [63:0] t11_fu_480_p2;
reg   [63:0] t11_reg_1748;
wire   [63:0] f2_9_fu_1462_p3;
reg   [63:0] f2_9_reg_1753;
wire   [63:0] t12_fu_545_p2;
reg   [63:0] t12_reg_1758;
wire   [63:0] t19_fu_549_p2;
reg   [63:0] t19_reg_1763;
reg   [63:0] t19_reg_1763_pp0_iter17_reg;
wire   [63:0] f1_1_fu_489_p2;
reg   [63:0] f1_1_reg_1768;
wire   [63:0] f1_4_fu_1476_p3;
reg   [63:0] f1_4_reg_1774;
wire   [63:0] f2_10_fu_493_p2;
reg   [63:0] f2_10_reg_1779;
wire   [63:0] result_fu_1503_p3;
reg   [63:0] result_reg_1784;
wire   [63:0] j_cast_fu_1510_p1;
reg   [63:0] j_cast_reg_1789;
reg   [63:0] div_reg_1794;
reg    ap_enable_reg_pp0_iter0;
wire    ap_CS_fsm_state2;
wire    grp_seedInitialization_fu_432_ap_ready;
wire    grp_seedInitialization_fu_432_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg   [8:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_address0;
reg    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0;
reg    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0;
reg   [31:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_d0;
wire   [31:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_q0;
reg   [8:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_address1;
reg    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1;
wire   [31:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
reg   [8:0] rngMT19937ICN_uniformRNG_mt_even_0_V_address0;
reg    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0;
reg    rngMT19937ICN_uniformRNG_mt_even_0_V_we0;
reg   [31:0] rngMT19937ICN_uniformRNG_mt_even_0_V_d0;
wire   [31:0] rngMT19937ICN_uniformRNG_mt_even_0_V_q0;
reg   [8:0] rngMT19937ICN_uniformRNG_mt_even_0_V_address1;
reg    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1;
wire   [31:0] rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
wire    grp_seedInitialization_fu_432_ap_start;
wire    grp_seedInitialization_fu_432_ap_idle;
wire   [8:0] grp_seedInitialization_fu_432_this_mt_odd_0_address0;
wire    grp_seedInitialization_fu_432_this_mt_odd_0_ce0;
wire    grp_seedInitialization_fu_432_this_mt_odd_0_we0;
wire   [31:0] grp_seedInitialization_fu_432_this_mt_odd_0_d0;
wire   [8:0] grp_seedInitialization_fu_432_this_mt_odd_0_address1;
wire    grp_seedInitialization_fu_432_this_mt_odd_0_ce1;
wire   [8:0] grp_seedInitialization_fu_432_this_mt_odd_1_address0;
wire    grp_seedInitialization_fu_432_this_mt_odd_1_ce0;
wire    grp_seedInitialization_fu_432_this_mt_odd_1_we0;
wire   [31:0] grp_seedInitialization_fu_432_this_mt_odd_1_d0;
wire   [8:0] grp_seedInitialization_fu_432_this_mt_even_0_address0;
wire    grp_seedInitialization_fu_432_this_mt_even_0_ce0;
wire    grp_seedInitialization_fu_432_this_mt_even_0_we0;
wire   [31:0] grp_seedInitialization_fu_432_this_mt_even_0_d0;
wire   [8:0] grp_seedInitialization_fu_432_this_mt_even_1_address0;
wire    grp_seedInitialization_fu_432_this_mt_even_1_ce0;
wire    grp_seedInitialization_fu_432_this_mt_even_1_we0;
wire   [31:0] grp_seedInitialization_fu_432_this_mt_even_1_d0;
wire   [31:0] grp_seedInitialization_fu_432_ap_return_0;
wire   [31:0] grp_seedInitialization_fu_432_ap_return_1;
wire   [31:0] grp_seedInitialization_fu_432_ap_return_2;
wire   [31:0] grp_seedInitialization_fu_432_ap_return_3;
reg   [31:0] ap_phi_mux_p_0_0_0616_phi_fu_413_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_p_0_0_0616_reg_410;
reg   [31:0] ap_phi_mux_p_0_0_0604_phi_fu_424_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_p_0_0_0604_reg_421;
reg    grp_seedInitialization_fu_432_ap_start_reg;
wire   [63:0] zext_ln587_fu_682_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln587_6_fu_692_p1;
wire   [63:0] zext_ln587_7_fu_785_p1;
reg   [31:0] rngMT19937ICN_uniformRNG_x_k_p_2_V_1_fu_288;
reg   [31:0] lhs_V_fu_292;
reg   [31:0] p_Val2_s_fu_296;
reg   [3:0] j_fu_300;
wire   [3:0] add_ln17_fu_636_p2;
reg   [31:0] p_Val2_150_fu_304;
wire   [31:0] ret_15_fu_760_p2;
wire   [63:0] add_fu_498_p2;
wire   [63:0] t5_fu_456_p1;
wire   [63:0] t14_fu_460_p1;
wire   [63:0] t7_fu_464_p1;
wire   [63:0] t16_fu_468_p1;
wire   [63:0] t9_fu_472_p1;
wire   [63:0] f2_fu_476_p1;
wire   [63:0] t11_fu_480_p1;
wire   [63:0] f1_1_fu_489_p1;
wire   [63:0] t4_fu_513_p0;
wire   [63:0] t13_fu_517_p0;
wire   [7:0] p_cast13_fu_642_p1;
wire   [3:0] addr_head_p_3_V_fu_650_p2;
wire   [7:0] addr_head_p_m_p_1_V_fu_656_p2;
wire   [2:0] r_s_fu_662_p4;
wire   [6:0] trunc_ln_fu_672_p4;
wire  signed [7:0] sext_ln587_fu_688_p1;
wire   [0:0] tmp_423_fu_712_p3;
wire   [29:0] tmp_s_fu_724_p4;
wire   [30:0] tmp_V_fu_734_p3;
wire   [0:0] p_Result_269_fu_720_p1;
wire   [31:0] select_ln722_fu_746_p3;
wire   [31:0] xor_ln1544_fu_754_p2;
wire   [31:0] zext_ln1043_fu_742_p1;
wire   [2:0] tmp_45_fu_768_p4;
wire   [9:0] r_16_fu_777_p3;
wire   [20:0] r_fu_794_p4;
wire   [31:0] zext_ln1691_fu_804_p1;
wire   [31:0] pre_result_V_15_fu_808_p2;
wire   [0:0] tmp_424_fu_814_p3;
wire   [2:0] tmp_46_fu_822_p4;
wire   [0:0] tmp_425_fu_832_p3;
wire   [0:0] tmp_426_fu_840_p3;
wire   [1:0] tmp_47_fu_848_p4;
wire   [0:0] tmp_427_fu_858_p3;
wire   [0:0] tmp_428_fu_866_p3;
wire   [1:0] tmp_48_fu_874_p4;
wire   [0:0] trunc_ln1542_fu_884_p1;
wire   [31:0] ret_fu_888_p19;
wire   [31:0] pre_result_V_16_fu_928_p2;
wire   [2:0] tmp_49_fu_934_p4;
wire   [5:0] tmp_50_fu_944_p4;
wire   [1:0] tmp_51_fu_954_p4;
wire   [31:0] ret_13_fu_964_p7;
wire   [31:0] pre_result_V_17_fu_980_p2;
wire   [13:0] r_12_fu_986_p4;
wire   [31:0] zext_ln1691_4_fu_996_p1;
wire   [31:0] pre_result_V_fu_1000_p2;
reg   [31:0] p_Result_270_fu_1012_p4;
reg   [31:0] l_fu_1022_p3;
wire   [31:0] sub_ln947_fu_1034_p2;
wire   [31:0] lsb_index_fu_1040_p2;
wire   [30:0] tmp_429_fu_1046_p4;
wire   [5:0] trunc_ln950_fu_1066_p1;
wire   [5:0] sub_ln950_fu_1070_p2;
wire   [31:0] zext_ln950_fu_1076_p1;
wire   [31:0] lshr_ln950_fu_1080_p2;
wire   [31:0] shl_ln952_fu_1086_p2;
wire   [31:0] or_ln952_5_fu_1092_p2;
wire   [31:0] and_ln952_fu_1098_p2;
wire   [0:0] tmp_430_fu_1110_p3;
wire   [0:0] p_Result_271_fu_1124_p3;
wire   [0:0] xor_ln952_fu_1118_p2;
wire   [31:0] sub_ln962_fu_1144_p2;
wire   [63:0] zext_ln960_fu_1062_p1;
wire   [63:0] zext_ln962_fu_1150_p1;
wire   [0:0] icmp_ln949_fu_1056_p2;
wire   [0:0] icmp_ln952_fu_1104_p2;
wire   [31:0] add_ln961_fu_1168_p2;
wire   [63:0] zext_ln961_fu_1174_p1;
wire   [0:0] icmp_ln961_fu_1132_p2;
wire   [0:0] select_ln949_fu_1160_p3;
wire   [0:0] and_ln952_8_fu_1138_p2;
wire   [63:0] lshr_ln961_fu_1178_p2;
wire   [63:0] shl_ln962_fu_1154_p2;
wire   [0:0] select_ln961_fu_1184_p3;
wire   [63:0] m_fu_1192_p3;
wire   [63:0] zext_ln964_fu_1200_p1;
wire   [63:0] m_33_fu_1204_p2;
wire   [62:0] m_36_fu_1210_p4;
wire   [10:0] trunc_ln946_fu_1030_p1;
wire   [10:0] sub_ln969_fu_1232_p2;
wire   [0:0] p_Result_s_fu_1224_p3;
wire   [10:0] add_ln968_fu_1238_p2;
wire   [10:0] select_ln968_fu_1244_p3;
wire   [63:0] zext_ln965_fu_1220_p1;
wire   [11:0] tmp_fu_1252_p3;
wire   [63:0] p_Result_272_fu_1260_p5;
wire   [0:0] icmp_ln938_fu_1006_p2;
wire   [63:0] bitcast_ln746_fu_1272_p1;
wire   [63:0] bitcast_ln443_fu_1306_p1;
wire   [10:0] tmp_17_fu_1309_p4;
wire   [51:0] trunc_ln443_fu_1319_p1;
wire   [0:0] icmp_ln443_4_fu_1329_p2;
wire   [0:0] icmp_ln443_fu_1323_p2;
wire   [63:0] bitcast_ln456_fu_1353_p1;
wire   [63:0] xor_ln456_fu_1356_p2;
wire   [0:0] tmp_20_fu_571_p2;
wire   [0:0] and_ln443_4_fu_1367_p2;
wire   [63:0] r_13_fu_509_p2;
wire   [63:0] f2_8_fu_484_p2;
wire   [63:0] f1_fu_553_p2;
wire   [63:0] bitcast_ln541_fu_1482_p1;
wire   [63:0] xor_ln541_fu_1486_p2;
wire   [63:0] bitcast_ln541_4_fu_1492_p1;
wire   [63:0] select_ln540_fu_1496_p3;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state33;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state33_blk;
reg    ap_block_pp0;
reg    ap_predicate_op70_load_state3;
reg    ap_enable_operation_70;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_predicate_op94_load_state4;
reg    ap_enable_operation_94;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op102_store_state4;
reg    ap_enable_operation_102;
reg    ap_predicate_op72_load_state3;
reg    ap_enable_operation_72;
reg    ap_predicate_op95_load_state4;
reg    ap_enable_operation_95;
reg    ap_predicate_op97_store_state4;
reg    ap_enable_operation_97;
reg    ap_predicate_op74_load_state3;
reg    ap_enable_operation_74;
reg    ap_predicate_op99_load_state4;
reg    ap_enable_operation_99;
reg    ap_predicate_op76_load_state3;
reg    ap_enable_operation_76;
reg    ap_predicate_op100_load_state4;
reg    ap_enable_operation_100;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1499;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 grp_seedInitialization_fu_432_ap_start_reg = 1'b0;
end

TOP_AWGN_rngMT19937ICN_uniformRNG_mt_odd_0_V_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
rngMT19937ICN_uniformRNG_mt_odd_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rngMT19937ICN_uniformRNG_mt_odd_0_V_address0),
    .ce0(rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0),
    .we0(rngMT19937ICN_uniformRNG_mt_odd_0_V_we0),
    .d0(rngMT19937ICN_uniformRNG_mt_odd_0_V_d0),
    .q0(rngMT19937ICN_uniformRNG_mt_odd_0_V_q0),
    .address1(rngMT19937ICN_uniformRNG_mt_odd_0_V_address1),
    .ce1(rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1),
    .q1(rngMT19937ICN_uniformRNG_mt_odd_0_V_q1)
);

TOP_AWGN_rngMT19937ICN_1_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
rngMT19937ICN_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_seedInitialization_fu_432_this_mt_odd_1_address0),
    .ce0(grp_seedInitialization_fu_432_this_mt_odd_1_ce0),
    .we0(grp_seedInitialization_fu_432_this_mt_odd_1_we0),
    .d0(grp_seedInitialization_fu_432_this_mt_odd_1_d0)
);

TOP_AWGN_rngMT19937ICN_uniformRNG_mt_odd_0_V_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
rngMT19937ICN_uniformRNG_mt_even_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rngMT19937ICN_uniformRNG_mt_even_0_V_address0),
    .ce0(rngMT19937ICN_uniformRNG_mt_even_0_V_ce0),
    .we0(rngMT19937ICN_uniformRNG_mt_even_0_V_we0),
    .d0(rngMT19937ICN_uniformRNG_mt_even_0_V_d0),
    .q0(rngMT19937ICN_uniformRNG_mt_even_0_V_q0),
    .address1(rngMT19937ICN_uniformRNG_mt_even_0_V_address1),
    .ce1(rngMT19937ICN_uniformRNG_mt_even_0_V_ce1),
    .q1(rngMT19937ICN_uniformRNG_mt_even_0_V_q1)
);

TOP_AWGN_rngMT19937ICN_1_RAM_AUTO_0R0W #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
rngMT19937ICN_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_seedInitialization_fu_432_this_mt_even_1_address0),
    .ce0(grp_seedInitialization_fu_432_this_mt_even_1_ce0),
    .we0(grp_seedInitialization_fu_432_this_mt_even_1_we0),
    .d0(grp_seedInitialization_fu_432_this_mt_even_1_d0)
);

TOP_seedInitialization grp_seedInitialization_fu_432(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_seedInitialization_fu_432_ap_start),
    .ap_done(grp_seedInitialization_fu_432_ap_done),
    .ap_idle(grp_seedInitialization_fu_432_ap_idle),
    .ap_ready(grp_seedInitialization_fu_432_ap_ready),
    .this_mt_odd_0_address0(grp_seedInitialization_fu_432_this_mt_odd_0_address0),
    .this_mt_odd_0_ce0(grp_seedInitialization_fu_432_this_mt_odd_0_ce0),
    .this_mt_odd_0_we0(grp_seedInitialization_fu_432_this_mt_odd_0_we0),
    .this_mt_odd_0_d0(grp_seedInitialization_fu_432_this_mt_odd_0_d0),
    .this_mt_odd_0_q0(rngMT19937ICN_uniformRNG_mt_odd_0_V_q0),
    .this_mt_odd_0_address1(grp_seedInitialization_fu_432_this_mt_odd_0_address1),
    .this_mt_odd_0_ce1(grp_seedInitialization_fu_432_this_mt_odd_0_ce1),
    .this_mt_odd_0_q1(rngMT19937ICN_uniformRNG_mt_odd_0_V_q1),
    .this_mt_odd_1_address0(grp_seedInitialization_fu_432_this_mt_odd_1_address0),
    .this_mt_odd_1_ce0(grp_seedInitialization_fu_432_this_mt_odd_1_ce0),
    .this_mt_odd_1_we0(grp_seedInitialization_fu_432_this_mt_odd_1_we0),
    .this_mt_odd_1_d0(grp_seedInitialization_fu_432_this_mt_odd_1_d0),
    .this_mt_even_0_address0(grp_seedInitialization_fu_432_this_mt_even_0_address0),
    .this_mt_even_0_ce0(grp_seedInitialization_fu_432_this_mt_even_0_ce0),
    .this_mt_even_0_we0(grp_seedInitialization_fu_432_this_mt_even_0_we0),
    .this_mt_even_0_d0(grp_seedInitialization_fu_432_this_mt_even_0_d0),
    .this_mt_even_0_q0(rngMT19937ICN_uniformRNG_mt_even_0_V_q0),
    .this_mt_even_1_address0(grp_seedInitialization_fu_432_this_mt_even_1_address0),
    .this_mt_even_1_ce0(grp_seedInitialization_fu_432_this_mt_even_1_ce0),
    .this_mt_even_1_we0(grp_seedInitialization_fu_432_this_mt_even_1_we0),
    .this_mt_even_1_d0(grp_seedInitialization_fu_432_this_mt_even_1_d0),
    .seed(6'd20),
    .ap_return_0(grp_seedInitialization_fu_432_ap_return_0),
    .ap_return_1(grp_seedInitialization_fu_432_ap_return_1),
    .ap_return_2(grp_seedInitialization_fu_432_ap_return_2),
    .ap_return_3(grp_seedInitialization_fu_432_ap_return_3)
);

TOP_dsub_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dsub_64ns_64ns_64_1_no_dsp_1_U81(
    .din0(64'd4607182418800017408),
    .din1(tmp_uniform_fu_1276_p3),
    .dout(tmp_21_fu_446_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U82(
    .din0(tmp_uniform_reg_1583_pp0_iter5_reg),
    .din1(64'd13826050856027422720),
    .dout(z_fu_451_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U83(
    .din0(t4_reg_1677),
    .din1(t5_fu_456_p1),
    .dout(t5_fu_456_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U84(
    .din0(t13_reg_1682),
    .din1(t14_fu_460_p1),
    .dout(t14_fu_460_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U85(
    .din0(t6_reg_1697),
    .din1(t7_fu_464_p1),
    .dout(t7_fu_464_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U86(
    .din0(t15_reg_1702),
    .din1(t16_fu_468_p1),
    .dout(t16_fu_468_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U87(
    .din0(t8_reg_1717),
    .din1(t9_fu_472_p1),
    .dout(t9_fu_472_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U88(
    .din0(t17_reg_1722),
    .din1(f2_fu_476_p1),
    .dout(f2_fu_476_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U89(
    .din0(t10_reg_1738),
    .din1(t11_fu_480_p1),
    .dout(t11_fu_480_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U90(
    .din0(t18_reg_1743),
    .din1(64'd13847038013971134502),
    .dout(f2_8_fu_484_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U91(
    .din0(t12_reg_1758),
    .din1(f1_1_fu_489_p1),
    .dout(f1_1_fu_489_p2)
);

TOP_dadd_64ns_64ns_64_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_no_dsp_1_U92(
    .din0(t19_reg_1763_pp0_iter17_reg),
    .din1(64'd4607182418800017408),
    .dout(f2_10_fu_493_p2)
);

TOP_dadd_64ns_64ns_64_1_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_1_full_dsp_1_U93(
    .din0(div_reg_1794),
    .din1(din_q0),
    .dout(add_fu_498_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U94(
    .din0(t1_reg_1617),
    .din1(64'd4611686018427387904),
    .dout(t2_fu_504_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U95(
    .din0(z_reg_1651),
    .din1(z_reg_1651),
    .dout(r_13_fu_509_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U96(
    .din0(t4_fu_513_p0),
    .din1(r_15_reg_1663),
    .dout(t4_fu_513_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U97(
    .din0(t13_fu_517_p0),
    .din1(r_15_reg_1663),
    .dout(t13_fu_517_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U98(
    .din0(t5_reg_1687),
    .din1(r_15_reg_1663_pp0_iter9_reg),
    .dout(t6_fu_521_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U99(
    .din0(t14_reg_1692),
    .din1(r_15_reg_1663_pp0_iter9_reg),
    .dout(t15_fu_525_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U100(
    .din0(t7_reg_1707),
    .din1(r_15_reg_1663_pp0_iter11_reg),
    .dout(t8_fu_529_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U101(
    .din0(t16_reg_1712),
    .din1(r_15_reg_1663_pp0_iter11_reg),
    .dout(t17_fu_533_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U102(
    .din0(t9_reg_1727),
    .din1(r_15_reg_1663_pp0_iter13_reg),
    .dout(t10_fu_537_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U103(
    .din0(f2_reg_1732),
    .din1(r_15_reg_1663_pp0_iter13_reg),
    .dout(t18_fu_541_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U104(
    .din0(t11_reg_1748),
    .din1(r_15_reg_1663_pp0_iter15_reg),
    .dout(t12_fu_545_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U105(
    .din0(f2_9_reg_1753),
    .din1(r_15_reg_1663_pp0_iter15_reg),
    .dout(t19_fu_549_p2)
);

TOP_dmul_64ns_64ns_64_1_med_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_1_med_dsp_1_U106(
    .din0(f1_1_reg_1768),
    .din1(z_9_reg_1658_pp0_iter17_reg),
    .dout(f1_fu_553_p2)
);

TOP_dcmp_64ns_64ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_1_no_dsp_1_U109(
    .din0(tmp_uniform_fu_1276_p3),
    .din1(64'd4582646808030102946),
    .opcode(5'd4),
    .dout(tmp_18_fu_566_p2)
);

TOP_dcmp_64ns_64ns_1_1_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_1_no_dsp_1_U110(
    .din0(tmp_uniform_reg_1583_pp0_iter5_reg),
    .din1(64'd4606963994218089939),
    .opcode(5'd2),
    .dout(tmp_20_fu_571_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_seedInitialization_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end else if (((grp_seedInitialization_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter29 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_seedInitialization_fu_432_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_seedInitialization_fu_432_ap_start_reg <= 1'b1;
        end else if ((grp_seedInitialization_fu_432_ap_ready == 1'b1)) begin
            grp_seedInitialization_fu_432_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_fu_300 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_630_p2 == 1'd0))) begin
        j_fu_300 <= add_ln17_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_seedInitialization_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        lhs_V_fu_292 <= grp_seedInitialization_fu_432_ap_return_3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1555 == 1'd0))) begin
        lhs_V_fu_292 <= ap_phi_mux_p_0_0_0604_phi_fu_424_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_seedInitialization_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_150_fu_304 <= grp_seedInitialization_fu_432_ap_return_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1555 == 1'd0))) begin
        p_Val2_150_fu_304 <= rngMT19937ICN_uniformRNG_x_k_p_2_V_1_fu_288;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_seedInitialization_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_s_fu_296 <= grp_seedInitialization_fu_432_ap_return_0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1555 == 1'd0))) begin
        p_Val2_s_fu_296 <= p_Val2_150_fu_304;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_seedInitialization_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rngMT19937ICN_uniformRNG_x_k_p_2_V_1_fu_288 <= grp_seedInitialization_fu_432_ap_return_2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1555 == 1'd0))) begin
        rngMT19937ICN_uniformRNG_x_k_p_2_V_1_fu_288 <= ap_phi_mux_p_0_0_0616_phi_fu_413_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln443_reg_1606 <= and_ln443_fu_1341_p2;
        and_ln443_reg_1606_pp0_iter10_reg <= and_ln443_reg_1606_pp0_iter9_reg;
        and_ln443_reg_1606_pp0_iter11_reg <= and_ln443_reg_1606_pp0_iter10_reg;
        and_ln443_reg_1606_pp0_iter12_reg <= and_ln443_reg_1606_pp0_iter11_reg;
        and_ln443_reg_1606_pp0_iter13_reg <= and_ln443_reg_1606_pp0_iter12_reg;
        and_ln443_reg_1606_pp0_iter14_reg <= and_ln443_reg_1606_pp0_iter13_reg;
        and_ln443_reg_1606_pp0_iter15_reg <= and_ln443_reg_1606_pp0_iter14_reg;
        and_ln443_reg_1606_pp0_iter16_reg <= and_ln443_reg_1606_pp0_iter15_reg;
        and_ln443_reg_1606_pp0_iter17_reg <= and_ln443_reg_1606_pp0_iter16_reg;
        and_ln443_reg_1606_pp0_iter18_reg <= and_ln443_reg_1606_pp0_iter17_reg;
        and_ln443_reg_1606_pp0_iter19_reg <= and_ln443_reg_1606_pp0_iter18_reg;
        and_ln443_reg_1606_pp0_iter20_reg <= and_ln443_reg_1606_pp0_iter19_reg;
        and_ln443_reg_1606_pp0_iter21_reg <= and_ln443_reg_1606_pp0_iter20_reg;
        and_ln443_reg_1606_pp0_iter22_reg <= and_ln443_reg_1606_pp0_iter21_reg;
        and_ln443_reg_1606_pp0_iter3_reg <= and_ln443_reg_1606;
        and_ln443_reg_1606_pp0_iter4_reg <= and_ln443_reg_1606_pp0_iter3_reg;
        and_ln443_reg_1606_pp0_iter5_reg <= and_ln443_reg_1606_pp0_iter4_reg;
        and_ln443_reg_1606_pp0_iter6_reg <= and_ln443_reg_1606_pp0_iter5_reg;
        and_ln443_reg_1606_pp0_iter7_reg <= and_ln443_reg_1606_pp0_iter6_reg;
        and_ln443_reg_1606_pp0_iter8_reg <= and_ln443_reg_1606_pp0_iter7_reg;
        and_ln443_reg_1606_pp0_iter9_reg <= and_ln443_reg_1606_pp0_iter8_reg;
        div_reg_1794 <= grp_fu_969_p_dout0;
        f1_1_reg_1768 <= f1_1_fu_489_p2;
        f1_4_reg_1774 <= f1_4_fu_1476_p3;
        f2_10_reg_1779 <= f2_10_fu_493_p2;
        f2_9_reg_1753 <= f2_9_fu_1462_p3;
        f2_reg_1732 <= f2_fu_476_p2;
        f2_reg_1732_pp0_iter14_reg <= f2_reg_1732;
        icmp_ln17_reg_1555_pp0_iter10_reg <= icmp_ln17_reg_1555_pp0_iter9_reg;
        icmp_ln17_reg_1555_pp0_iter11_reg <= icmp_ln17_reg_1555_pp0_iter10_reg;
        icmp_ln17_reg_1555_pp0_iter12_reg <= icmp_ln17_reg_1555_pp0_iter11_reg;
        icmp_ln17_reg_1555_pp0_iter13_reg <= icmp_ln17_reg_1555_pp0_iter12_reg;
        icmp_ln17_reg_1555_pp0_iter14_reg <= icmp_ln17_reg_1555_pp0_iter13_reg;
        icmp_ln17_reg_1555_pp0_iter15_reg <= icmp_ln17_reg_1555_pp0_iter14_reg;
        icmp_ln17_reg_1555_pp0_iter16_reg <= icmp_ln17_reg_1555_pp0_iter15_reg;
        icmp_ln17_reg_1555_pp0_iter17_reg <= icmp_ln17_reg_1555_pp0_iter16_reg;
        icmp_ln17_reg_1555_pp0_iter18_reg <= icmp_ln17_reg_1555_pp0_iter17_reg;
        icmp_ln17_reg_1555_pp0_iter19_reg <= icmp_ln17_reg_1555_pp0_iter18_reg;
        icmp_ln17_reg_1555_pp0_iter20_reg <= icmp_ln17_reg_1555_pp0_iter19_reg;
        icmp_ln17_reg_1555_pp0_iter21_reg <= icmp_ln17_reg_1555_pp0_iter20_reg;
        icmp_ln17_reg_1555_pp0_iter22_reg <= icmp_ln17_reg_1555_pp0_iter21_reg;
        icmp_ln17_reg_1555_pp0_iter23_reg <= icmp_ln17_reg_1555_pp0_iter22_reg;
        icmp_ln17_reg_1555_pp0_iter24_reg <= icmp_ln17_reg_1555_pp0_iter23_reg;
        icmp_ln17_reg_1555_pp0_iter25_reg <= icmp_ln17_reg_1555_pp0_iter24_reg;
        icmp_ln17_reg_1555_pp0_iter26_reg <= icmp_ln17_reg_1555_pp0_iter25_reg;
        icmp_ln17_reg_1555_pp0_iter27_reg <= icmp_ln17_reg_1555_pp0_iter26_reg;
        icmp_ln17_reg_1555_pp0_iter2_reg <= icmp_ln17_reg_1555_pp0_iter1_reg;
        icmp_ln17_reg_1555_pp0_iter3_reg <= icmp_ln17_reg_1555_pp0_iter2_reg;
        icmp_ln17_reg_1555_pp0_iter4_reg <= icmp_ln17_reg_1555_pp0_iter3_reg;
        icmp_ln17_reg_1555_pp0_iter5_reg <= icmp_ln17_reg_1555_pp0_iter4_reg;
        icmp_ln17_reg_1555_pp0_iter6_reg <= icmp_ln17_reg_1555_pp0_iter5_reg;
        icmp_ln17_reg_1555_pp0_iter7_reg <= icmp_ln17_reg_1555_pp0_iter6_reg;
        icmp_ln17_reg_1555_pp0_iter8_reg <= icmp_ln17_reg_1555_pp0_iter7_reg;
        icmp_ln17_reg_1555_pp0_iter9_reg <= icmp_ln17_reg_1555_pp0_iter8_reg;
        j_6_reg_1549_pp0_iter10_reg <= j_6_reg_1549_pp0_iter9_reg;
        j_6_reg_1549_pp0_iter11_reg <= j_6_reg_1549_pp0_iter10_reg;
        j_6_reg_1549_pp0_iter12_reg <= j_6_reg_1549_pp0_iter11_reg;
        j_6_reg_1549_pp0_iter13_reg <= j_6_reg_1549_pp0_iter12_reg;
        j_6_reg_1549_pp0_iter14_reg <= j_6_reg_1549_pp0_iter13_reg;
        j_6_reg_1549_pp0_iter15_reg <= j_6_reg_1549_pp0_iter14_reg;
        j_6_reg_1549_pp0_iter16_reg <= j_6_reg_1549_pp0_iter15_reg;
        j_6_reg_1549_pp0_iter17_reg <= j_6_reg_1549_pp0_iter16_reg;
        j_6_reg_1549_pp0_iter18_reg <= j_6_reg_1549_pp0_iter17_reg;
        j_6_reg_1549_pp0_iter19_reg <= j_6_reg_1549_pp0_iter18_reg;
        j_6_reg_1549_pp0_iter20_reg <= j_6_reg_1549_pp0_iter19_reg;
        j_6_reg_1549_pp0_iter21_reg <= j_6_reg_1549_pp0_iter20_reg;
        j_6_reg_1549_pp0_iter22_reg <= j_6_reg_1549_pp0_iter21_reg;
        j_6_reg_1549_pp0_iter23_reg <= j_6_reg_1549_pp0_iter22_reg;
        j_6_reg_1549_pp0_iter24_reg <= j_6_reg_1549_pp0_iter23_reg;
        j_6_reg_1549_pp0_iter25_reg <= j_6_reg_1549_pp0_iter24_reg;
        j_6_reg_1549_pp0_iter26_reg <= j_6_reg_1549_pp0_iter25_reg;
        j_6_reg_1549_pp0_iter27_reg <= j_6_reg_1549_pp0_iter26_reg;
        j_6_reg_1549_pp0_iter2_reg <= j_6_reg_1549_pp0_iter1_reg;
        j_6_reg_1549_pp0_iter3_reg <= j_6_reg_1549_pp0_iter2_reg;
        j_6_reg_1549_pp0_iter4_reg <= j_6_reg_1549_pp0_iter3_reg;
        j_6_reg_1549_pp0_iter5_reg <= j_6_reg_1549_pp0_iter4_reg;
        j_6_reg_1549_pp0_iter6_reg <= j_6_reg_1549_pp0_iter5_reg;
        j_6_reg_1549_pp0_iter7_reg <= j_6_reg_1549_pp0_iter6_reg;
        j_6_reg_1549_pp0_iter8_reg <= j_6_reg_1549_pp0_iter7_reg;
        j_6_reg_1549_pp0_iter9_reg <= j_6_reg_1549_pp0_iter8_reg;
        or_ln443_4_reg_1632 <= or_ln443_4_fu_1372_p2;
        or_ln443_4_reg_1632_pp0_iter10_reg <= or_ln443_4_reg_1632_pp0_iter9_reg;
        or_ln443_4_reg_1632_pp0_iter11_reg <= or_ln443_4_reg_1632_pp0_iter10_reg;
        or_ln443_4_reg_1632_pp0_iter12_reg <= or_ln443_4_reg_1632_pp0_iter11_reg;
        or_ln443_4_reg_1632_pp0_iter13_reg <= or_ln443_4_reg_1632_pp0_iter12_reg;
        or_ln443_4_reg_1632_pp0_iter14_reg <= or_ln443_4_reg_1632_pp0_iter13_reg;
        or_ln443_4_reg_1632_pp0_iter15_reg <= or_ln443_4_reg_1632_pp0_iter14_reg;
        or_ln443_4_reg_1632_pp0_iter16_reg <= or_ln443_4_reg_1632_pp0_iter15_reg;
        or_ln443_4_reg_1632_pp0_iter17_reg <= or_ln443_4_reg_1632_pp0_iter16_reg;
        or_ln443_4_reg_1632_pp0_iter18_reg <= or_ln443_4_reg_1632_pp0_iter17_reg;
        or_ln443_4_reg_1632_pp0_iter19_reg <= or_ln443_4_reg_1632_pp0_iter18_reg;
        or_ln443_4_reg_1632_pp0_iter20_reg <= or_ln443_4_reg_1632_pp0_iter19_reg;
        or_ln443_4_reg_1632_pp0_iter21_reg <= or_ln443_4_reg_1632_pp0_iter20_reg;
        or_ln443_4_reg_1632_pp0_iter22_reg <= or_ln443_4_reg_1632_pp0_iter21_reg;
        or_ln443_4_reg_1632_pp0_iter7_reg <= or_ln443_4_reg_1632;
        or_ln443_4_reg_1632_pp0_iter8_reg <= or_ln443_4_reg_1632_pp0_iter7_reg;
        or_ln443_4_reg_1632_pp0_iter9_reg <= or_ln443_4_reg_1632_pp0_iter8_reg;
        or_ln443_reg_1601 <= or_ln443_fu_1335_p2;
        or_ln443_reg_1601_pp0_iter3_reg <= or_ln443_reg_1601;
        or_ln443_reg_1601_pp0_iter4_reg <= or_ln443_reg_1601_pp0_iter3_reg;
        or_ln443_reg_1601_pp0_iter5_reg <= or_ln443_reg_1601_pp0_iter4_reg;
        r_15_reg_1663 <= r_15_fu_1383_p3;
        r_15_reg_1663_pp0_iter10_reg <= r_15_reg_1663_pp0_iter9_reg;
        r_15_reg_1663_pp0_iter11_reg <= r_15_reg_1663_pp0_iter10_reg;
        r_15_reg_1663_pp0_iter12_reg <= r_15_reg_1663_pp0_iter11_reg;
        r_15_reg_1663_pp0_iter13_reg <= r_15_reg_1663_pp0_iter12_reg;
        r_15_reg_1663_pp0_iter14_reg <= r_15_reg_1663_pp0_iter13_reg;
        r_15_reg_1663_pp0_iter15_reg <= r_15_reg_1663_pp0_iter14_reg;
        r_15_reg_1663_pp0_iter8_reg <= r_15_reg_1663;
        r_15_reg_1663_pp0_iter9_reg <= r_15_reg_1663_pp0_iter8_reg;
        result_reg_1784 <= result_fu_1503_p3;
        t10_reg_1738 <= t10_fu_537_p2;
        t11_reg_1748 <= t11_fu_480_p2;
        t12_reg_1758 <= t12_fu_545_p2;
        t13_reg_1682 <= t13_fu_517_p2;
        t14_reg_1692 <= t14_fu_460_p2;
        t15_reg_1702 <= t15_fu_525_p2;
        t16_reg_1712 <= t16_fu_468_p2;
        t17_reg_1722 <= t17_fu_533_p2;
        t19_reg_1763 <= t19_fu_549_p2;
        t19_reg_1763_pp0_iter17_reg <= t19_reg_1763;
        t1_reg_1617 <= grp_fu_977_p_dout0;
        t2_reg_1622 <= t2_fu_504_p2;
        t4_reg_1677 <= t4_fu_513_p2;
        t5_reg_1687 <= t5_fu_456_p2;
        t6_reg_1697 <= t6_fu_521_p2;
        t7_reg_1707 <= t7_fu_464_p2;
        t8_reg_1717 <= t8_fu_529_p2;
        t9_reg_1727 <= t9_fu_472_p2;
        tmp_uniform_reg_1583_pp0_iter2_reg <= tmp_uniform_reg_1583;
        tmp_uniform_reg_1583_pp0_iter3_reg <= tmp_uniform_reg_1583_pp0_iter2_reg;
        tmp_uniform_reg_1583_pp0_iter4_reg <= tmp_uniform_reg_1583_pp0_iter3_reg;
        tmp_uniform_reg_1583_pp0_iter5_reg <= tmp_uniform_reg_1583_pp0_iter4_reg;
        z_9_reg_1658_pp0_iter10_reg <= z_9_reg_1658_pp0_iter9_reg;
        z_9_reg_1658_pp0_iter11_reg <= z_9_reg_1658_pp0_iter10_reg;
        z_9_reg_1658_pp0_iter12_reg <= z_9_reg_1658_pp0_iter11_reg;
        z_9_reg_1658_pp0_iter13_reg <= z_9_reg_1658_pp0_iter12_reg;
        z_9_reg_1658_pp0_iter14_reg <= z_9_reg_1658_pp0_iter13_reg;
        z_9_reg_1658_pp0_iter15_reg <= z_9_reg_1658_pp0_iter14_reg;
        z_9_reg_1658_pp0_iter16_reg <= z_9_reg_1658_pp0_iter15_reg;
        z_9_reg_1658_pp0_iter17_reg <= z_9_reg_1658_pp0_iter16_reg;
        z_9_reg_1658_pp0_iter8_reg <= z_9_reg_1658;
        z_9_reg_1658_pp0_iter9_reg <= z_9_reg_1658_pp0_iter8_reg;
        z_reg_1651 <= z_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln17_reg_1555 <= icmp_ln17_fu_630_p2;
        icmp_ln17_reg_1555_pp0_iter1_reg <= icmp_ln17_reg_1555;
        j_6_reg_1549 <= j_fu_300;
        j_6_reg_1549_pp0_iter1_reg <= j_6_reg_1549;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln17_reg_1555_pp0_iter27_reg == 1'd0))) begin
        j_cast_reg_1789[3 : 0] <= j_cast_fu_1510_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln443_4_reg_1632_pp0_iter13_reg == 1'd0))) begin
        t18_reg_1743 <= t18_fu_541_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_1555 == 1'd0))) begin
        tmp_18_reg_1591 <= tmp_18_fu_566_p2;
        tmp_21_reg_1596 <= tmp_21_fu_446_p2;
        tmp_uniform_reg_1583 <= tmp_uniform_fu_1276_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_630_p2 == 1'd0))) begin
        trunc_ln229_reg_1559 <= trunc_ln229_fu_646_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (or_ln443_4_reg_1632 == 1'd0))) begin
        z_9_reg_1658 <= z_9_fu_1377_p3;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_seedInitialization_fu_432_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state33_blk = 1'b0;

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_630_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln17_reg_1555 == 1'd0)) begin
        if ((trunc_ln229_reg_1559 == 1'd1)) begin
            ap_phi_mux_p_0_0_0604_phi_fu_424_p4 = rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
        end else if ((trunc_ln229_reg_1559 == 1'd0)) begin
            ap_phi_mux_p_0_0_0604_phi_fu_424_p4 = rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
        end else begin
            ap_phi_mux_p_0_0_0604_phi_fu_424_p4 = ap_phi_reg_pp0_iter1_p_0_0_0604_reg_421;
        end
    end else begin
        ap_phi_mux_p_0_0_0604_phi_fu_424_p4 = ap_phi_reg_pp0_iter1_p_0_0_0604_reg_421;
    end
end

always @ (*) begin
    if ((icmp_ln17_reg_1555 == 1'd0)) begin
        if ((trunc_ln229_reg_1559 == 1'd1)) begin
            ap_phi_mux_p_0_0_0616_phi_fu_413_p4 = rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
        end else if ((trunc_ln229_reg_1559 == 1'd0)) begin
            ap_phi_mux_p_0_0_0616_phi_fu_413_p4 = rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
        end else begin
            ap_phi_mux_p_0_0_0616_phi_fu_413_p4 = ap_phi_reg_pp0_iter1_p_0_0_0616_reg_410;
        end
    end else begin
        ap_phi_mux_p_0_0_0616_phi_fu_413_p4 = ap_phi_reg_pp0_iter1_p_0_0_0616_reg_410;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        din_ce0 = 1'b1;
    end else begin
        din_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        dout_ce0 = 1'b1;
    end else begin
        dout_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        dout_we0 = 1'b1;
    end else begin
        dout_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_address0 = zext_ln587_7_fu_785_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_address0 = grp_seedInitialization_fu_432_this_mt_even_0_address0;
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1499)) begin
        if ((trunc_ln229_fu_646_p1 == 1'd1)) begin
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 = zext_ln587_fu_682_p1;
        end else if ((trunc_ln229_fu_646_p1 == 1'd0)) begin
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 = zext_ln587_6_fu_692_p1;
        end else begin
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 = 'bx;
        end
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 = grp_seedInitialization_fu_432_this_mt_even_0_ce0;
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln229_fu_646_p1 == 1'd1) & (icmp_ln17_fu_630_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln229_fu_646_p1 == 1'd0) & (icmp_ln17_fu_630_p2 == 1'd0)))) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 = 1'b1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_d0 = ret_15_fu_760_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_d0 = grp_seedInitialization_fu_432_this_mt_even_0_d0;
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln229_reg_1559 == 1'd0) & (icmp_ln17_reg_1555 == 1'd0))) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 = grp_seedInitialization_fu_432_this_mt_even_0_we0;
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 = zext_ln587_7_fu_785_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 = grp_seedInitialization_fu_432_this_mt_odd_0_address0;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln229_fu_646_p1 == 1'd1) & (icmp_ln17_fu_630_p2 == 1'd0))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 = zext_ln587_6_fu_692_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln229_fu_646_p1 == 1'd0) & (icmp_ln17_fu_630_p2 == 1'd0))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 = zext_ln587_fu_682_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 = grp_seedInitialization_fu_432_this_mt_odd_0_address1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 = grp_seedInitialization_fu_432_this_mt_odd_0_ce0;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln229_fu_646_p1 == 1'd1) & (icmp_ln17_fu_630_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln229_fu_646_p1 == 1'd0) & (icmp_ln17_fu_630_p2 == 1'd0)))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 = grp_seedInitialization_fu_432_this_mt_odd_0_ce1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 = ret_15_fu_760_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 = grp_seedInitialization_fu_432_this_mt_odd_0_d0;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln229_reg_1559 == 1'd1) & (icmp_ln17_reg_1555 == 1'd0))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 = grp_seedInitialization_fu_432_this_mt_odd_0_we0;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_seedInitialization_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1) & (ap_enable_reg_pp0_iter28 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter29 == 1'b1) & (ap_enable_reg_pp0_iter28 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln17_fu_636_p2 = (j_fu_300 + 4'd1);

assign add_ln961_fu_1168_p2 = ($signed(sub_ln947_fu_1034_p2) + $signed(32'd4294967242));

assign add_ln968_fu_1238_p2 = (sub_ln969_fu_1232_p2 + 11'd1);

assign addr_head_p_3_V_fu_650_p2 = (j_fu_300 + 4'd3);

assign addr_head_p_m_p_1_V_fu_656_p2 = ($signed(p_cast13_fu_642_p1) + $signed(8'd142));

assign and_ln443_4_fu_1367_p2 = (tmp_20_fu_571_p2 & or_ln443_reg_1601_pp0_iter5_reg);

assign and_ln443_fu_1341_p2 = (tmp_18_reg_1591 & or_ln443_fu_1335_p2);

assign and_ln952_8_fu_1138_p2 = (xor_ln952_fu_1118_p2 & p_Result_271_fu_1124_p3);

assign and_ln952_fu_1098_p2 = (pre_result_V_fu_1000_p2 & or_ln952_5_fu_1092_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1499 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_fu_630_p2 == 1'd0));
end

always @ (*) begin
    ap_enable_operation_100 = (ap_predicate_op100_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_102 = (ap_predicate_op102_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_70 = (ap_predicate_op70_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_72 = (ap_predicate_op72_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_74 = (ap_predicate_op74_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_76 = (ap_predicate_op76_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_94 = (ap_predicate_op94_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_95 = (ap_predicate_op95_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_97 = (ap_predicate_op97_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_99 = (ap_predicate_op99_load_state4 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_phi_reg_pp0_iter1_p_0_0_0604_reg_421 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_0_0616_reg_410 = 'bx;

always @ (*) begin
    ap_predicate_op100_load_state4 = ((trunc_ln229_reg_1559 == 1'd1) & (icmp_ln17_reg_1555 == 1'd0));
end

always @ (*) begin
    ap_predicate_op102_store_state4 = ((trunc_ln229_reg_1559 == 1'd1) & (icmp_ln17_reg_1555 == 1'd0));
end

always @ (*) begin
    ap_predicate_op70_load_state3 = ((trunc_ln229_fu_646_p1 == 1'd0) & (icmp_ln17_fu_630_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op72_load_state3 = ((trunc_ln229_fu_646_p1 == 1'd0) & (icmp_ln17_fu_630_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op74_load_state3 = ((trunc_ln229_fu_646_p1 == 1'd1) & (icmp_ln17_fu_630_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op76_load_state3 = ((trunc_ln229_fu_646_p1 == 1'd1) & (icmp_ln17_fu_630_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op94_load_state4 = ((trunc_ln229_reg_1559 == 1'd0) & (icmp_ln17_reg_1555 == 1'd0));
end

always @ (*) begin
    ap_predicate_op95_load_state4 = ((trunc_ln229_reg_1559 == 1'd0) & (icmp_ln17_reg_1555 == 1'd0));
end

always @ (*) begin
    ap_predicate_op97_store_state4 = ((trunc_ln229_reg_1559 == 1'd0) & (icmp_ln17_reg_1555 == 1'd0));
end

always @ (*) begin
    ap_predicate_op99_load_state4 = ((trunc_ln229_reg_1559 == 1'd1) & (icmp_ln17_reg_1555 == 1'd0));
end

assign bitcast_ln443_fu_1306_p1 = tmp_uniform_reg_1583;

assign bitcast_ln456_fu_1353_p1 = t2_reg_1622;

assign bitcast_ln541_4_fu_1492_p1 = xor_ln541_fu_1486_p2;

assign bitcast_ln541_fu_1482_p1 = grp_fu_965_p_dout0;

assign bitcast_ln746_fu_1272_p1 = p_Result_272_fu_1260_p5;

assign din_address0 = j_cast_fu_1510_p1;

assign dout_address0 = j_cast_reg_1789;

assign dout_d0 = add_fu_498_p2;

assign f1_1_fu_489_p1 = ((or_ln443_4_reg_1632_pp0_iter16_reg[0:0] == 1'b1) ? 64'd4613798575908835234 : 64'd4612826843888178297);

assign f1_4_fu_1476_p3 = ((or_ln443_4_reg_1632_pp0_iter17_reg[0:0] == 1'b1) ? f1_1_reg_1768 : f1_fu_553_p2);

assign f2_9_fu_1462_p3 = ((or_ln443_4_reg_1632_pp0_iter14_reg[0:0] == 1'b1) ? f2_reg_1732_pp0_iter14_reg : f2_8_fu_484_p2);

assign f2_fu_476_p1 = ((or_ln443_4_reg_1632_pp0_iter12_reg[0:0] == 1'b1) ? 64'd4615636595525398809 : 64'd4634401141363829182);

assign grp_fu_965_p_ce = 1'b1;

assign grp_fu_965_p_din0 = f1_4_reg_1774;

assign grp_fu_965_p_din1 = f2_10_reg_1779;

assign grp_fu_969_p_ce = 1'b1;

assign grp_fu_969_p_din0 = result_reg_1784;

assign grp_fu_969_p_din1 = 64'd4616721195882509480;

assign grp_fu_973_p_ce = 1'b1;

assign grp_fu_973_p_din0 = 64'd0;

assign grp_fu_973_p_din1 = t3_fu_1362_p1;

assign grp_fu_977_p_ce = 1'b1;

assign grp_fu_977_p_din0 = 64'd0;

assign grp_fu_977_p_din1 = tmp_432_fu_1346_p3;

assign grp_seedInitialization_fu_432_ap_start = grp_seedInitialization_fu_432_ap_start_reg;

assign icmp_ln17_fu_630_p2 = ((j_fu_300 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln443_4_fu_1329_p2 = ((trunc_ln443_fu_1319_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_1323_p2 = ((tmp_17_fu_1309_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln938_fu_1006_p2 = ((zext_ln1691_4_fu_996_p1 == pre_result_V_17_fu_980_p2) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_1056_p2 = (($signed(tmp_429_fu_1046_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln952_fu_1104_p2 = ((and_ln952_fu_1098_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln961_fu_1132_p2 = (($signed(lsb_index_fu_1040_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign j_cast_fu_1510_p1 = j_6_reg_1549_pp0_iter27_reg;


always @ (p_Result_270_fu_1012_p4) begin
    if (p_Result_270_fu_1012_p4[0] == 1'b1) begin
        l_fu_1022_p3 = 32'd0;
    end else if (p_Result_270_fu_1012_p4[1] == 1'b1) begin
        l_fu_1022_p3 = 32'd1;
    end else if (p_Result_270_fu_1012_p4[2] == 1'b1) begin
        l_fu_1022_p3 = 32'd2;
    end else if (p_Result_270_fu_1012_p4[3] == 1'b1) begin
        l_fu_1022_p3 = 32'd3;
    end else if (p_Result_270_fu_1012_p4[4] == 1'b1) begin
        l_fu_1022_p3 = 32'd4;
    end else if (p_Result_270_fu_1012_p4[5] == 1'b1) begin
        l_fu_1022_p3 = 32'd5;
    end else if (p_Result_270_fu_1012_p4[6] == 1'b1) begin
        l_fu_1022_p3 = 32'd6;
    end else if (p_Result_270_fu_1012_p4[7] == 1'b1) begin
        l_fu_1022_p3 = 32'd7;
    end else if (p_Result_270_fu_1012_p4[8] == 1'b1) begin
        l_fu_1022_p3 = 32'd8;
    end else if (p_Result_270_fu_1012_p4[9] == 1'b1) begin
        l_fu_1022_p3 = 32'd9;
    end else if (p_Result_270_fu_1012_p4[10] == 1'b1) begin
        l_fu_1022_p3 = 32'd10;
    end else if (p_Result_270_fu_1012_p4[11] == 1'b1) begin
        l_fu_1022_p3 = 32'd11;
    end else if (p_Result_270_fu_1012_p4[12] == 1'b1) begin
        l_fu_1022_p3 = 32'd12;
    end else if (p_Result_270_fu_1012_p4[13] == 1'b1) begin
        l_fu_1022_p3 = 32'd13;
    end else if (p_Result_270_fu_1012_p4[14] == 1'b1) begin
        l_fu_1022_p3 = 32'd14;
    end else if (p_Result_270_fu_1012_p4[15] == 1'b1) begin
        l_fu_1022_p3 = 32'd15;
    end else if (p_Result_270_fu_1012_p4[16] == 1'b1) begin
        l_fu_1022_p3 = 32'd16;
    end else if (p_Result_270_fu_1012_p4[17] == 1'b1) begin
        l_fu_1022_p3 = 32'd17;
    end else if (p_Result_270_fu_1012_p4[18] == 1'b1) begin
        l_fu_1022_p3 = 32'd18;
    end else if (p_Result_270_fu_1012_p4[19] == 1'b1) begin
        l_fu_1022_p3 = 32'd19;
    end else if (p_Result_270_fu_1012_p4[20] == 1'b1) begin
        l_fu_1022_p3 = 32'd20;
    end else if (p_Result_270_fu_1012_p4[21] == 1'b1) begin
        l_fu_1022_p3 = 32'd21;
    end else if (p_Result_270_fu_1012_p4[22] == 1'b1) begin
        l_fu_1022_p3 = 32'd22;
    end else if (p_Result_270_fu_1012_p4[23] == 1'b1) begin
        l_fu_1022_p3 = 32'd23;
    end else if (p_Result_270_fu_1012_p4[24] == 1'b1) begin
        l_fu_1022_p3 = 32'd24;
    end else if (p_Result_270_fu_1012_p4[25] == 1'b1) begin
        l_fu_1022_p3 = 32'd25;
    end else if (p_Result_270_fu_1012_p4[26] == 1'b1) begin
        l_fu_1022_p3 = 32'd26;
    end else if (p_Result_270_fu_1012_p4[27] == 1'b1) begin
        l_fu_1022_p3 = 32'd27;
    end else if (p_Result_270_fu_1012_p4[28] == 1'b1) begin
        l_fu_1022_p3 = 32'd28;
    end else if (p_Result_270_fu_1012_p4[29] == 1'b1) begin
        l_fu_1022_p3 = 32'd29;
    end else if (p_Result_270_fu_1012_p4[30] == 1'b1) begin
        l_fu_1022_p3 = 32'd30;
    end else if (p_Result_270_fu_1012_p4[31] == 1'b1) begin
        l_fu_1022_p3 = 32'd31;
    end else begin
        l_fu_1022_p3 = 32'd32;
    end
end

assign lsb_index_fu_1040_p2 = ($signed(sub_ln947_fu_1034_p2) + $signed(32'd4294967243));

assign lshr_ln950_fu_1080_p2 = 32'd4294967295 >> zext_ln950_fu_1076_p1;

assign lshr_ln961_fu_1178_p2 = zext_ln960_fu_1062_p1 >> zext_ln961_fu_1174_p1;

assign m_33_fu_1204_p2 = (m_fu_1192_p3 + zext_ln964_fu_1200_p1);

assign m_36_fu_1210_p4 = {{m_33_fu_1204_p2[63:1]}};

assign m_fu_1192_p3 = ((icmp_ln961_fu_1132_p2[0:0] == 1'b1) ? lshr_ln961_fu_1178_p2 : shl_ln962_fu_1154_p2);

assign or_ln443_4_fu_1372_p2 = (and_ln443_reg_1606_pp0_iter5_reg | and_ln443_4_fu_1367_p2);

assign or_ln443_fu_1335_p2 = (icmp_ln443_fu_1323_p2 | icmp_ln443_4_fu_1329_p2);

assign or_ln952_5_fu_1092_p2 = (shl_ln952_fu_1086_p2 | lshr_ln950_fu_1080_p2);

assign p_Result_269_fu_720_p1 = p_Val2_150_fu_304[0:0];

integer ap_tvar_int_0;

always @ (pre_result_V_fu_1000_p2) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_270_fu_1012_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_270_fu_1012_p4[ap_tvar_int_0] = pre_result_V_fu_1000_p2[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_271_fu_1124_p3 = pre_result_V_fu_1000_p2[lsb_index_fu_1040_p2];

assign p_Result_272_fu_1260_p5 = {{tmp_fu_1252_p3}, {zext_ln965_fu_1220_p1[51:0]}};

assign p_Result_s_fu_1224_p3 = m_33_fu_1204_p2[32'd54];

assign p_cast13_fu_642_p1 = j_fu_300;

assign pre_result_V_15_fu_808_p2 = (zext_ln1691_fu_804_p1 ^ ret_15_fu_760_p2);

assign pre_result_V_16_fu_928_p2 = (ret_fu_888_p19 ^ pre_result_V_15_fu_808_p2);

assign pre_result_V_17_fu_980_p2 = (ret_13_fu_964_p7 ^ pre_result_V_16_fu_928_p2);

assign pre_result_V_fu_1000_p2 = (zext_ln1691_4_fu_996_p1 ^ pre_result_V_17_fu_980_p2);

assign r_12_fu_986_p4 = {{pre_result_V_17_fu_980_p2[31:18]}};

assign r_15_fu_1383_p3 = ((or_ln443_4_reg_1632[0:0] == 1'b1) ? grp_fu_973_p_dout0 : r_13_fu_509_p2);

assign r_16_fu_777_p3 = {{7'd39}, {tmp_45_fu_768_p4}};

assign r_fu_794_p4 = {{ret_15_fu_760_p2[31:11]}};

assign r_s_fu_662_p4 = {{addr_head_p_3_V_fu_650_p2[3:1]}};

assign result_fu_1503_p3 = ((or_ln443_4_reg_1632_pp0_iter22_reg[0:0] == 1'b1) ? select_ln540_fu_1496_p3 : grp_fu_965_p_dout0);

assign ret_13_fu_964_p7 = {{{{{{tmp_49_fu_934_p4}, {1'd0}}, {tmp_50_fu_944_p4}}, {3'd0}}, {tmp_51_fu_954_p4}}, {17'd0}};

assign ret_15_fu_760_p2 = (zext_ln1043_fu_742_p1 ^ xor_ln1544_fu_754_p2);

assign ret_fu_888_p19 = {{{{{{{{{{{{{{{{{{tmp_424_fu_814_p3}, {2'd0}}, {tmp_46_fu_822_p4}}, {1'd0}}, {tmp_425_fu_832_p3}}, {2'd0}}, {tmp_426_fu_840_p3}}, {1'd0}}, {tmp_47_fu_848_p4}}, {3'd0}}, {tmp_427_fu_858_p3}}, {1'd0}}, {tmp_428_fu_866_p3}}, {1'd0}}, {tmp_48_fu_874_p4}}, {1'd0}}, {trunc_ln1542_fu_884_p1}}, {7'd0}};

assign select_ln540_fu_1496_p3 = ((and_ln443_reg_1606_pp0_iter22_reg[0:0] == 1'b1) ? grp_fu_965_p_dout0 : bitcast_ln541_4_fu_1492_p1);

assign select_ln722_fu_746_p3 = ((p_Result_269_fu_720_p1[0:0] == 1'b1) ? 32'd2567483615 : 32'd0);

assign select_ln949_fu_1160_p3 = ((icmp_ln949_fu_1056_p2[0:0] == 1'b1) ? icmp_ln952_fu_1104_p2 : p_Result_271_fu_1124_p3);

assign select_ln961_fu_1184_p3 = ((icmp_ln961_fu_1132_p2[0:0] == 1'b1) ? select_ln949_fu_1160_p3 : and_ln952_8_fu_1138_p2);

assign select_ln968_fu_1244_p3 = ((p_Result_s_fu_1224_p3[0:0] == 1'b1) ? add_ln968_fu_1238_p2 : sub_ln969_fu_1232_p2);

assign sext_ln587_fu_688_p1 = $signed(trunc_ln_fu_672_p4);

assign shl_ln952_fu_1086_p2 = 32'd1 << lsb_index_fu_1040_p2;

assign shl_ln962_fu_1154_p2 = zext_ln960_fu_1062_p1 << zext_ln962_fu_1150_p1;

assign sub_ln947_fu_1034_p2 = (32'd32 - l_fu_1022_p3);

assign sub_ln950_fu_1070_p2 = (6'd22 - trunc_ln950_fu_1066_p1);

assign sub_ln962_fu_1144_p2 = (32'd54 - sub_ln947_fu_1034_p2);

assign sub_ln969_fu_1232_p2 = (11'd1022 - trunc_ln946_fu_1030_p1);

assign t11_fu_480_p1 = ((or_ln443_4_reg_1632_pp0_iter14_reg[0:0] == 1'b1) ? 64'd4616611452376731079 : 64'd13852696627858410445);

assign t13_fu_517_p0 = ((or_ln443_4_reg_1632_pp0_iter7_reg[0:0] == 1'b1) ? 64'd4575625165243457492 : 64'd13856235683484533956);

assign t14_fu_460_p1 = ((or_ln443_4_reg_1632_pp0_iter8_reg[0:0] == 1'b1) ? 64'd4599480671287182180 : 64'd4639889312772538999);

assign t16_fu_468_p1 = ((or_ln443_4_reg_1632_pp0_iter10_reg[0:0] == 1'b1) ? 64'd4612688371394471446 : 64'd13863054224260258002);

assign t3_fu_1362_p1 = xor_ln456_fu_1356_p2;

assign t4_fu_513_p0 = ((or_ln443_4_reg_1632_pp0_iter7_reg[0:0] == 1'b1) ? 64'd13798997430714945504 : 64'd13854155686354486565);

assign t5_fu_456_p1 = ((or_ln443_4_reg_1632_pp0_iter8_reg[0:0] == 1'b1) ? 64'd13822851435045880248 : 64'd4641977866302784411);

assign t7_fu_464_p1 = ((or_ln443_4_reg_1632_pp0_iter10_reg[0:0] == 1'b1) ? 64'd13835960482696009560 : 64'd13866933838737128345);

assign t9_fu_472_p1 = ((or_ln443_4_reg_1632_pp0_iter12_reg[0:0] == 1'b1) ? 64'd13836295942911834650 : 64'd4639072047187312667);

assign tmp_17_fu_1309_p4 = {{bitcast_ln443_fu_1306_p1[62:52]}};

assign tmp_423_fu_712_p3 = p_Val2_s_fu_296[32'd31];

assign tmp_424_fu_814_p3 = pre_result_V_15_fu_808_p2[32'd24];

assign tmp_425_fu_832_p3 = pre_result_V_15_fu_808_p2[32'd17];

assign tmp_426_fu_840_p3 = pre_result_V_15_fu_808_p2[32'd14];

assign tmp_427_fu_858_p3 = pre_result_V_15_fu_808_p2[32'd7];

assign tmp_428_fu_866_p3 = pre_result_V_15_fu_808_p2[32'd5];

assign tmp_429_fu_1046_p4 = {{lsb_index_fu_1040_p2[31:1]}};

assign tmp_430_fu_1110_p3 = lsb_index_fu_1040_p2[32'd31];

assign tmp_432_fu_1346_p3 = ((and_ln443_fu_1341_p2[0:0] == 1'b1) ? tmp_uniform_reg_1583 : tmp_21_reg_1596);

assign tmp_45_fu_768_p4 = {{j_6_reg_1549[3:1]}};

assign tmp_46_fu_822_p4 = {{pre_result_V_15_fu_808_p2[21:19]}};

assign tmp_47_fu_848_p4 = {{pre_result_V_15_fu_808_p2[12:11]}};

assign tmp_48_fu_874_p4 = {{pre_result_V_15_fu_808_p2[3:2]}};

assign tmp_49_fu_934_p4 = {{pre_result_V_16_fu_928_p2[16:14]}};

assign tmp_50_fu_944_p4 = {{pre_result_V_16_fu_928_p2[12:7]}};

assign tmp_51_fu_954_p4 = {{pre_result_V_16_fu_928_p2[3:2]}};

assign tmp_V_fu_734_p3 = {{tmp_423_fu_712_p3}, {tmp_s_fu_724_p4}};

assign tmp_fu_1252_p3 = {{1'd0}, {select_ln968_fu_1244_p3}};

assign tmp_s_fu_724_p4 = {{p_Val2_150_fu_304[30:1]}};

assign tmp_uniform_fu_1276_p3 = ((icmp_ln938_fu_1006_p2[0:0] == 1'b1) ? 64'd0 : bitcast_ln746_fu_1272_p1);

assign trunc_ln1542_fu_884_p1 = pre_result_V_15_fu_808_p2[0:0];

assign trunc_ln229_fu_646_p1 = j_fu_300[0:0];

assign trunc_ln443_fu_1319_p1 = bitcast_ln443_fu_1306_p1[51:0];

assign trunc_ln946_fu_1030_p1 = l_fu_1022_p3[10:0];

assign trunc_ln950_fu_1066_p1 = sub_ln947_fu_1034_p2[5:0];

assign trunc_ln_fu_672_p4 = {{addr_head_p_m_p_1_V_fu_656_p2[7:1]}};

assign xor_ln1544_fu_754_p2 = (select_ln722_fu_746_p3 ^ lhs_V_fu_292);

assign xor_ln456_fu_1356_p2 = (bitcast_ln456_fu_1353_p1 ^ 64'd9223372036854775808);

assign xor_ln541_fu_1486_p2 = (bitcast_ln541_fu_1482_p1 ^ 64'd9223372036854775808);

assign xor_ln952_fu_1118_p2 = (tmp_430_fu_1110_p3 ^ 1'd1);

assign z_9_fu_1377_p3 = ((or_ln443_4_reg_1632[0:0] == 1'b1) ? grp_fu_973_p_dout0 : z_reg_1651);

assign zext_ln1043_fu_742_p1 = tmp_V_fu_734_p3;

assign zext_ln1691_4_fu_996_p1 = r_12_fu_986_p4;

assign zext_ln1691_fu_804_p1 = r_fu_794_p4;

assign zext_ln587_6_fu_692_p1 = $unsigned(sext_ln587_fu_688_p1);

assign zext_ln587_7_fu_785_p1 = r_16_fu_777_p3;

assign zext_ln587_fu_682_p1 = r_s_fu_662_p4;

assign zext_ln950_fu_1076_p1 = sub_ln950_fu_1070_p2;

assign zext_ln960_fu_1062_p1 = pre_result_V_fu_1000_p2;

assign zext_ln961_fu_1174_p1 = add_ln961_fu_1168_p2;

assign zext_ln962_fu_1150_p1 = sub_ln962_fu_1144_p2;

assign zext_ln964_fu_1200_p1 = select_ln961_fu_1184_p3;

assign zext_ln965_fu_1220_p1 = m_36_fu_1210_p4;

always @ (posedge ap_clk) begin
    j_cast_reg_1789[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //TOP_AWGN
