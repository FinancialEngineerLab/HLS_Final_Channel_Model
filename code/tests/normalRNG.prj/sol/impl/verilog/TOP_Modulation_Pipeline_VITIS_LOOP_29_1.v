// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_Modulation_Pipeline_VITIS_LOOP_29_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rngMT19937ICN_uniformRNG_x_k_p_0_V,
        rngMT19937ICN_uniformRNG_x_k_p_1_V,
        rngMT19937ICN_uniformRNG_x_k_p_m_V,
        rngMT19937ICN_uniformRNG_x_k_p_2_V,
        rngMT19937ICN_uniformRNG_mt_even_0_V_address0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_d0,
        rngMT19937ICN_uniformRNG_mt_even_0_V_address1,
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce1,
        rngMT19937ICN_uniformRNG_mt_even_0_V_q1,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_d0,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address1,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1,
        rngMT19937ICN_uniformRNG_mt_odd_0_V_q1,
        p_Val2_138_out,
        p_Val2_138_out_ap_vld,
        p_Val2_out,
        p_Val2_out_ap_vld,
        lhs_V_32_out,
        lhs_V_32_out_ap_vld,
        rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out,
        rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] rngMT19937ICN_uniformRNG_x_k_p_0_V;
input  [31:0] rngMT19937ICN_uniformRNG_x_k_p_1_V;
input  [31:0] rngMT19937ICN_uniformRNG_x_k_p_m_V;
input  [31:0] rngMT19937ICN_uniformRNG_x_k_p_2_V;
output  [8:0] rngMT19937ICN_uniformRNG_mt_even_0_V_address0;
output   rngMT19937ICN_uniformRNG_mt_even_0_V_ce0;
output   rngMT19937ICN_uniformRNG_mt_even_0_V_we0;
output  [31:0] rngMT19937ICN_uniformRNG_mt_even_0_V_d0;
output  [8:0] rngMT19937ICN_uniformRNG_mt_even_0_V_address1;
output   rngMT19937ICN_uniformRNG_mt_even_0_V_ce1;
input  [31:0] rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
output  [8:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_address0;
output   rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0;
output   rngMT19937ICN_uniformRNG_mt_odd_0_V_we0;
output  [31:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_d0;
output  [8:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_address1;
output   rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1;
input  [31:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
output  [31:0] p_Val2_138_out;
output   p_Val2_138_out_ap_vld;
output  [31:0] p_Val2_out;
output   p_Val2_out_ap_vld;
output  [31:0] lhs_V_32_out;
output   lhs_V_32_out_ap_vld;
output  [31:0] rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out;
output   rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld;

reg ap_idle;
reg rngMT19937ICN_uniformRNG_mt_even_0_V_ce0;
reg rngMT19937ICN_uniformRNG_mt_even_0_V_we0;
reg[8:0] rngMT19937ICN_uniformRNG_mt_even_0_V_address1;
reg rngMT19937ICN_uniformRNG_mt_even_0_V_ce1;
reg rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0;
reg rngMT19937ICN_uniformRNG_mt_odd_0_V_we0;
reg[8:0] rngMT19937ICN_uniformRNG_mt_odd_0_V_address1;
reg rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1;
reg p_Val2_138_out_ap_vld;
reg p_Val2_out_ap_vld;
reg lhs_V_32_out_ap_vld;
reg rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln29_fu_273_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] icmp_ln29_reg_519;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] trunc_ln229_fu_288_p1;
reg   [0:0] trunc_ln229_reg_523;
reg   [8:0] r_12_reg_527;
reg   [31:0] ap_phi_mux_p_Val2_143_phi_fu_221_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_p_Val2_143_reg_218;
reg   [31:0] ap_phi_mux_lhs_V_phi_fu_232_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_lhs_V_reg_229;
wire   [63:0] zext_ln587_fu_346_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln587_6_fu_352_p1;
wire   [63:0] zext_ln587_7_fu_434_p1;
reg   [31:0] rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76;
wire    ap_loop_init;
reg   [31:0] lhs_V_32_fu_80;
reg   [31:0] p_Val2_135_fu_84;
reg   [9:0] empty_fu_88;
wire   [9:0] add_ln885_fu_310_p2;
reg   [9:0] ap_sig_allocacmp_p_load;
reg   [10:0] i_fu_92;
wire   [10:0] i_17_fu_279_p2;
reg   [10:0] ap_sig_allocacmp_i_16;
reg   [31:0] p_Val2_s_fu_96;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] pre_result_V_fu_426_p2;
wire   [9:0] addr_head_p_3_V_fu_292_p2;
wire   [9:0] addr_head_p_m_p_1_V_fu_298_p2;
wire   [9:0] addr_head_p_n_V_fu_304_p2;
wire   [8:0] r_s_fu_316_p4;
wire   [8:0] r_11_fu_326_p4;
wire   [0:0] tmp_fu_378_p3;
wire   [29:0] tmp_s_fu_390_p4;
wire   [30:0] tmp_V_fu_400_p3;
wire   [0:0] p_Result_s_fu_386_p1;
wire   [31:0] select_ln722_fu_412_p3;
wire   [31:0] xor_ln1544_fu_420_p2;
wire   [31:0] zext_ln1043_fu_408_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op39_load_state1;
reg    ap_enable_operation_39;
reg    ap_enable_state1_pp0_iter0_stage0;
reg    ap_predicate_op63_load_state2;
reg    ap_enable_operation_63;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_predicate_op71_store_state2;
reg    ap_enable_operation_71;
reg    ap_predicate_op41_load_state1;
reg    ap_enable_operation_41;
reg    ap_predicate_op64_load_state2;
reg    ap_enable_operation_64;
reg    ap_predicate_op66_store_state2;
reg    ap_enable_operation_66;
reg    ap_predicate_op43_load_state1;
reg    ap_enable_operation_43;
reg    ap_predicate_op68_load_state2;
reg    ap_enable_operation_68;
reg    ap_predicate_op45_load_state1;
reg    ap_enable_operation_45;
reg    ap_predicate_op69_load_state2;
reg    ap_enable_operation_69;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_174;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

TOP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_11001)) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln29_fu_273_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            empty_fu_88 <= add_ln885_fu_310_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            empty_fu_88 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln29_fu_273_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            i_fu_92 <= i_17_fu_279_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_92 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            lhs_V_32_fu_80 <= rngMT19937ICN_uniformRNG_x_k_p_m_V;
        end else if (((icmp_ln29_reg_519 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            lhs_V_32_fu_80 <= ap_phi_mux_lhs_V_phi_fu_232_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_135_fu_84 <= rngMT19937ICN_uniformRNG_x_k_p_0_V;
        end else if (((icmp_ln29_reg_519 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_135_fu_84 <= p_Val2_s_fu_96;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            p_Val2_s_fu_96 <= rngMT19937ICN_uniformRNG_x_k_p_1_V;
        end else if (((icmp_ln29_reg_519 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            p_Val2_s_fu_96 <= rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76 <= rngMT19937ICN_uniformRNG_x_k_p_2_V;
        end else if (((icmp_ln29_reg_519 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76 <= ap_phi_mux_p_Val2_143_phi_fu_221_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln29_reg_519 <= icmp_ln29_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_fu_273_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_12_reg_527 <= {{addr_head_p_n_V_fu_304_p2[9:1]}};
        trunc_ln229_reg_523 <= trunc_ln229_fu_288_p1;
    end
end

always @ (*) begin
    if (((icmp_ln29_fu_273_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln29_reg_519 == 1'd0)) begin
        if ((trunc_ln229_reg_523 == 1'd1)) begin
            ap_phi_mux_lhs_V_phi_fu_232_p4 = rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
        end else if ((trunc_ln229_reg_523 == 1'd0)) begin
            ap_phi_mux_lhs_V_phi_fu_232_p4 = rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
        end else begin
            ap_phi_mux_lhs_V_phi_fu_232_p4 = ap_phi_reg_pp0_iter1_lhs_V_reg_229;
        end
    end else begin
        ap_phi_mux_lhs_V_phi_fu_232_p4 = ap_phi_reg_pp0_iter1_lhs_V_reg_229;
    end
end

always @ (*) begin
    if ((icmp_ln29_reg_519 == 1'd0)) begin
        if ((trunc_ln229_reg_523 == 1'd1)) begin
            ap_phi_mux_p_Val2_143_phi_fu_221_p4 = rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
        end else if ((trunc_ln229_reg_523 == 1'd0)) begin
            ap_phi_mux_p_Val2_143_phi_fu_221_p4 = rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
        end else begin
            ap_phi_mux_p_Val2_143_phi_fu_221_p4 = ap_phi_reg_pp0_iter1_p_Val2_143_reg_218;
        end
    end else begin
        ap_phi_mux_p_Val2_143_phi_fu_221_p4 = ap_phi_reg_pp0_iter1_p_Val2_143_reg_218;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_16 = 11'd0;
    end else begin
        ap_sig_allocacmp_i_16 = i_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_p_load = 10'd0;
    end else begin
        ap_sig_allocacmp_p_load = empty_fu_88;
    end
end

always @ (*) begin
    if (((icmp_ln29_reg_519 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lhs_V_32_out_ap_vld = 1'b1;
    end else begin
        lhs_V_32_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln29_reg_519 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_138_out_ap_vld = 1'b1;
    end else begin
        p_Val2_138_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln29_reg_519 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_out_ap_vld = 1'b1;
    end else begin
        p_Val2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_174)) begin
        if ((trunc_ln229_fu_288_p1 == 1'd1)) begin
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 = zext_ln587_fu_346_p1;
        end else if ((trunc_ln229_fu_288_p1 == 1'd0)) begin
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 = zext_ln587_6_fu_352_p1;
        end else begin
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 = 'bx;
        end
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 = 1'b1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln229_fu_288_p1 == 1'd0) & (icmp_ln29_fu_273_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln229_fu_288_p1 == 1'd1) & (icmp_ln29_fu_273_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 = 1'b1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln229_reg_523 == 1'd0) & (icmp_ln29_reg_519 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 = 1'b1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_even_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_174)) begin
        if ((trunc_ln229_fu_288_p1 == 1'd1)) begin
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 = zext_ln587_6_fu_352_p1;
        end else if ((trunc_ln229_fu_288_p1 == 1'd0)) begin
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 = zext_ln587_fu_346_p1;
        end else begin
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 = 'bx;
        end
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 = 1'b1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln229_fu_288_p1 == 1'd0) & (icmp_ln29_fu_273_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln229_fu_288_p1 == 1'd1) & (icmp_ln29_fu_273_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 = 1'b1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln229_reg_523 == 1'd1) & (icmp_ln29_reg_519 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 = 1'b1;
    end else begin
        rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln29_reg_519 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld = 1'b1;
    end else begin
        rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln885_fu_310_p2 = (ap_sig_allocacmp_p_load + 10'd1);

assign addr_head_p_3_V_fu_292_p2 = (ap_sig_allocacmp_p_load + 10'd3);

assign addr_head_p_m_p_1_V_fu_298_p2 = (ap_sig_allocacmp_p_load + 10'd398);

assign addr_head_p_n_V_fu_304_p2 = ($signed(ap_sig_allocacmp_p_load) + $signed(10'd624));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_174 = ((icmp_ln29_fu_273_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_39 = (ap_predicate_op39_load_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_41 = (ap_predicate_op41_load_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_43 = (ap_predicate_op43_load_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_45 = (ap_predicate_op45_load_state1 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_63 = (ap_predicate_op63_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_64 = (ap_predicate_op64_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_66 = (ap_predicate_op66_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_68 = (ap_predicate_op68_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_69 = (ap_predicate_op69_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_71 = (ap_predicate_op71_store_state2 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state1_pp0_iter0_stage0 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter1_lhs_V_reg_229 = 'bx;

assign ap_phi_reg_pp0_iter1_p_Val2_143_reg_218 = 'bx;

always @ (*) begin
    ap_predicate_op39_load_state1 = ((trunc_ln229_fu_288_p1 == 1'd0) & (icmp_ln29_fu_273_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op41_load_state1 = ((trunc_ln229_fu_288_p1 == 1'd0) & (icmp_ln29_fu_273_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op43_load_state1 = ((trunc_ln229_fu_288_p1 == 1'd1) & (icmp_ln29_fu_273_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op45_load_state1 = ((trunc_ln229_fu_288_p1 == 1'd1) & (icmp_ln29_fu_273_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op63_load_state2 = ((trunc_ln229_reg_523 == 1'd0) & (icmp_ln29_reg_519 == 1'd0));
end

always @ (*) begin
    ap_predicate_op64_load_state2 = ((trunc_ln229_reg_523 == 1'd0) & (icmp_ln29_reg_519 == 1'd0));
end

always @ (*) begin
    ap_predicate_op66_store_state2 = ((trunc_ln229_reg_523 == 1'd0) & (icmp_ln29_reg_519 == 1'd0));
end

always @ (*) begin
    ap_predicate_op68_load_state2 = ((trunc_ln229_reg_523 == 1'd1) & (icmp_ln29_reg_519 == 1'd0));
end

always @ (*) begin
    ap_predicate_op69_load_state2 = ((trunc_ln229_reg_523 == 1'd1) & (icmp_ln29_reg_519 == 1'd0));
end

always @ (*) begin
    ap_predicate_op71_store_state2 = ((trunc_ln229_reg_523 == 1'd1) & (icmp_ln29_reg_519 == 1'd0));
end

assign i_17_fu_279_p2 = (ap_sig_allocacmp_i_16 + 11'd1);

assign icmp_ln29_fu_273_p2 = ((ap_sig_allocacmp_i_16 == 11'd1024) ? 1'b1 : 1'b0);

assign lhs_V_32_out = lhs_V_32_fu_80;

assign p_Result_s_fu_386_p1 = p_Val2_s_fu_96[0:0];

assign p_Val2_138_out = p_Val2_135_fu_84;

assign p_Val2_out = p_Val2_s_fu_96;

assign pre_result_V_fu_426_p2 = (zext_ln1043_fu_408_p1 ^ xor_ln1544_fu_420_p2);

assign r_11_fu_326_p4 = {{addr_head_p_m_p_1_V_fu_298_p2[9:1]}};

assign r_s_fu_316_p4 = {{addr_head_p_3_V_fu_292_p2[9:1]}};

assign rngMT19937ICN_uniformRNG_mt_even_0_V_address0 = zext_ln587_7_fu_434_p1;

assign rngMT19937ICN_uniformRNG_mt_even_0_V_d0 = pre_result_V_fu_426_p2;

assign rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 = zext_ln587_7_fu_434_p1;

assign rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 = pre_result_V_fu_426_p2;

assign rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out = rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76;

assign select_ln722_fu_412_p3 = ((p_Result_s_fu_386_p1[0:0] == 1'b1) ? 32'd2567483615 : 32'd0);

assign tmp_V_fu_400_p3 = {{tmp_fu_378_p3}, {tmp_s_fu_390_p4}};

assign tmp_fu_378_p3 = p_Val2_135_fu_84[32'd31];

assign tmp_s_fu_390_p4 = {{p_Val2_s_fu_96[30:1]}};

assign trunc_ln229_fu_288_p1 = ap_sig_allocacmp_p_load[0:0];

assign xor_ln1544_fu_420_p2 = (select_ln722_fu_412_p3 ^ lhs_V_32_fu_80);

assign zext_ln1043_fu_408_p1 = tmp_V_fu_400_p3;

assign zext_ln587_6_fu_352_p1 = r_11_fu_326_p4;

assign zext_ln587_7_fu_434_p1 = r_12_reg_527;

assign zext_ln587_fu_346_p1 = r_s_fu_316_p4;

endmodule //TOP_Modulation_Pipeline_VITIS_LOOP_29_1
