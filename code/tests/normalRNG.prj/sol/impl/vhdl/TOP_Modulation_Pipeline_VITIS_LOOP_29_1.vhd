-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP_Modulation_Pipeline_VITIS_LOOP_29_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_x_k_p_0_V : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_1_V : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_m_V : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_2_V : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_Val2_138_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_Val2_138_out_ap_vld : OUT STD_LOGIC;
    p_Val2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_Val2_out_ap_vld : OUT STD_LOGIC;
    lhs_V_32_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    lhs_V_32_out_ap_vld : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of TOP_Modulation_Pipeline_VITIS_LOOP_29_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv10_18E : STD_LOGIC_VECTOR (9 downto 0) := "0110001110";
    constant ap_const_lv10_270 : STD_LOGIC_VECTOR (9 downto 0) := "1001110000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_9908B0DF : STD_LOGIC_VECTOR (31 downto 0) := "10011001000010001011000011011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln29_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal icmp_ln29_reg_519 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln229_fu_288_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln229_reg_523 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_12_reg_527 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_p_Val2_143_phi_fu_221_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_143_reg_218 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_lhs_V_phi_fu_232_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_lhs_V_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln587_fu_346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln587_6_fu_352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_7_fu_434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal lhs_V_32_fu_80 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_135_fu_84 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_88 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln885_fu_310_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_p_load : STD_LOGIC_VECTOR (9 downto 0);
    signal i_fu_92 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_17_fu_279_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_i_16 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal pre_result_V_fu_426_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal addr_head_p_3_V_fu_292_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_head_p_m_p_1_V_fu_298_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal addr_head_p_n_V_fu_304_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_s_fu_316_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_11_fu_326_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_378_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_390_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_fu_400_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_s_fu_386_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln722_fu_412_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1544_fu_420_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1043_fu_408_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op39_load_state1 : BOOLEAN;
    signal ap_enable_operation_39 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_predicate_op63_load_state2 : BOOLEAN;
    signal ap_enable_operation_63 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op71_store_state2 : BOOLEAN;
    signal ap_enable_operation_71 : BOOLEAN;
    signal ap_predicate_op41_load_state1 : BOOLEAN;
    signal ap_enable_operation_41 : BOOLEAN;
    signal ap_predicate_op64_load_state2 : BOOLEAN;
    signal ap_enable_operation_64 : BOOLEAN;
    signal ap_predicate_op66_store_state2 : BOOLEAN;
    signal ap_enable_operation_66 : BOOLEAN;
    signal ap_predicate_op43_load_state1 : BOOLEAN;
    signal ap_enable_operation_43 : BOOLEAN;
    signal ap_predicate_op68_load_state2 : BOOLEAN;
    signal ap_enable_operation_68 : BOOLEAN;
    signal ap_predicate_op45_load_state1 : BOOLEAN;
    signal ap_enable_operation_45 : BOOLEAN;
    signal ap_predicate_op69_load_state2 : BOOLEAN;
    signal ap_enable_operation_69 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_174 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component TOP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component TOP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if (((ap_loop_exit_ready = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                end if;
            end if; 
        end if;
    end process;

    empty_fu_88_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln29_fu_273_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1))) then 
                    empty_fu_88 <= add_ln885_fu_310_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    empty_fu_88 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    i_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln29_fu_273_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1))) then 
                    i_fu_92 <= i_17_fu_279_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_92 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;

    lhs_V_32_fu_80_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    lhs_V_32_fu_80 <= rngMT19937ICN_uniformRNG_x_k_p_m_V;
                elsif (((icmp_ln29_reg_519 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    lhs_V_32_fu_80 <= ap_phi_mux_lhs_V_phi_fu_232_p4;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_135_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_Val2_135_fu_84 <= rngMT19937ICN_uniformRNG_x_k_p_0_V;
                elsif (((icmp_ln29_reg_519 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Val2_135_fu_84 <= p_Val2_s_fu_96;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_Val2_s_fu_96 <= rngMT19937ICN_uniformRNG_x_k_p_1_V;
                elsif (((icmp_ln29_reg_519 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Val2_s_fu_96 <= rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76;
                end if;
            end if; 
        end if;
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76 <= rngMT19937ICN_uniformRNG_x_k_p_2_V;
                elsif (((icmp_ln29_reg_519 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76 <= ap_phi_mux_p_Val2_143_phi_fu_221_p4;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln29_reg_519 <= icmp_ln29_fu_273_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln29_fu_273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                r_12_reg_527 <= addr_head_p_n_V_fu_304_p2(9 downto 1);
                trunc_ln229_reg_523 <= trunc_ln229_fu_288_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln885_fu_310_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_p_load) + unsigned(ap_const_lv10_1));
    addr_head_p_3_V_fu_292_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_p_load) + unsigned(ap_const_lv10_3));
    addr_head_p_m_p_1_V_fu_298_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_p_load) + unsigned(ap_const_lv10_18E));
    addr_head_p_n_V_fu_304_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_p_load) + unsigned(ap_const_lv10_270));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_174_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln29_fu_273_p2, ap_block_pp0_stage0, ap_start_int)
    begin
                ap_condition_174 <= ((icmp_ln29_fu_273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln29_fu_273_p2, ap_start_int)
    begin
        if (((icmp_ln29_fu_273_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_39_assign_proc : process(ap_predicate_op39_load_state1)
    begin
                ap_enable_operation_39 <= (ap_predicate_op39_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_41_assign_proc : process(ap_predicate_op41_load_state1)
    begin
                ap_enable_operation_41 <= (ap_predicate_op41_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_43_assign_proc : process(ap_predicate_op43_load_state1)
    begin
                ap_enable_operation_43 <= (ap_predicate_op43_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_45_assign_proc : process(ap_predicate_op45_load_state1)
    begin
                ap_enable_operation_45 <= (ap_predicate_op45_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_63_assign_proc : process(ap_predicate_op63_load_state2)
    begin
                ap_enable_operation_63 <= (ap_predicate_op63_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_64_assign_proc : process(ap_predicate_op64_load_state2)
    begin
                ap_enable_operation_64 <= (ap_predicate_op64_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_66_assign_proc : process(ap_predicate_op66_store_state2)
    begin
                ap_enable_operation_66 <= (ap_predicate_op66_store_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_68_assign_proc : process(ap_predicate_op68_load_state2)
    begin
                ap_enable_operation_68 <= (ap_predicate_op68_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_69_assign_proc : process(ap_predicate_op69_load_state2)
    begin
                ap_enable_operation_69 <= (ap_predicate_op69_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_71_assign_proc : process(ap_predicate_op71_store_state2)
    begin
                ap_enable_operation_71 <= (ap_predicate_op71_store_state2 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_start_int)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_lhs_V_phi_fu_232_p4_assign_proc : process(rngMT19937ICN_uniformRNG_mt_even_0_V_q1, rngMT19937ICN_uniformRNG_mt_odd_0_V_q1, icmp_ln29_reg_519, trunc_ln229_reg_523, ap_phi_reg_pp0_iter1_lhs_V_reg_229)
    begin
        if ((icmp_ln29_reg_519 = ap_const_lv1_0)) then
            if ((trunc_ln229_reg_523 = ap_const_lv1_1)) then 
                ap_phi_mux_lhs_V_phi_fu_232_p4 <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
            elsif ((trunc_ln229_reg_523 = ap_const_lv1_0)) then 
                ap_phi_mux_lhs_V_phi_fu_232_p4 <= rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
            else 
                ap_phi_mux_lhs_V_phi_fu_232_p4 <= ap_phi_reg_pp0_iter1_lhs_V_reg_229;
            end if;
        else 
            ap_phi_mux_lhs_V_phi_fu_232_p4 <= ap_phi_reg_pp0_iter1_lhs_V_reg_229;
        end if; 
    end process;


    ap_phi_mux_p_Val2_143_phi_fu_221_p4_assign_proc : process(rngMT19937ICN_uniformRNG_mt_even_0_V_q1, rngMT19937ICN_uniformRNG_mt_odd_0_V_q1, icmp_ln29_reg_519, trunc_ln229_reg_523, ap_phi_reg_pp0_iter1_p_Val2_143_reg_218)
    begin
        if ((icmp_ln29_reg_519 = ap_const_lv1_0)) then
            if ((trunc_ln229_reg_523 = ap_const_lv1_1)) then 
                ap_phi_mux_p_Val2_143_phi_fu_221_p4 <= rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
            elsif ((trunc_ln229_reg_523 = ap_const_lv1_0)) then 
                ap_phi_mux_p_Val2_143_phi_fu_221_p4 <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
            else 
                ap_phi_mux_p_Val2_143_phi_fu_221_p4 <= ap_phi_reg_pp0_iter1_p_Val2_143_reg_218;
            end if;
        else 
            ap_phi_mux_p_Val2_143_phi_fu_221_p4 <= ap_phi_reg_pp0_iter1_p_Val2_143_reg_218;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_lhs_V_reg_229 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_p_Val2_143_reg_218 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op39_load_state1_assign_proc : process(icmp_ln29_fu_273_p2, trunc_ln229_fu_288_p1)
    begin
                ap_predicate_op39_load_state1 <= ((trunc_ln229_fu_288_p1 = ap_const_lv1_0) and (icmp_ln29_fu_273_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op41_load_state1_assign_proc : process(icmp_ln29_fu_273_p2, trunc_ln229_fu_288_p1)
    begin
                ap_predicate_op41_load_state1 <= ((trunc_ln229_fu_288_p1 = ap_const_lv1_0) and (icmp_ln29_fu_273_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op43_load_state1_assign_proc : process(icmp_ln29_fu_273_p2, trunc_ln229_fu_288_p1)
    begin
                ap_predicate_op43_load_state1 <= ((trunc_ln229_fu_288_p1 = ap_const_lv1_1) and (icmp_ln29_fu_273_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op45_load_state1_assign_proc : process(icmp_ln29_fu_273_p2, trunc_ln229_fu_288_p1)
    begin
                ap_predicate_op45_load_state1 <= ((trunc_ln229_fu_288_p1 = ap_const_lv1_1) and (icmp_ln29_fu_273_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op63_load_state2_assign_proc : process(icmp_ln29_reg_519, trunc_ln229_reg_523)
    begin
                ap_predicate_op63_load_state2 <= ((trunc_ln229_reg_523 = ap_const_lv1_0) and (icmp_ln29_reg_519 = ap_const_lv1_0));
    end process;


    ap_predicate_op64_load_state2_assign_proc : process(icmp_ln29_reg_519, trunc_ln229_reg_523)
    begin
                ap_predicate_op64_load_state2 <= ((trunc_ln229_reg_523 = ap_const_lv1_0) and (icmp_ln29_reg_519 = ap_const_lv1_0));
    end process;


    ap_predicate_op66_store_state2_assign_proc : process(icmp_ln29_reg_519, trunc_ln229_reg_523)
    begin
                ap_predicate_op66_store_state2 <= ((trunc_ln229_reg_523 = ap_const_lv1_0) and (icmp_ln29_reg_519 = ap_const_lv1_0));
    end process;


    ap_predicate_op68_load_state2_assign_proc : process(icmp_ln29_reg_519, trunc_ln229_reg_523)
    begin
                ap_predicate_op68_load_state2 <= ((trunc_ln229_reg_523 = ap_const_lv1_1) and (icmp_ln29_reg_519 = ap_const_lv1_0));
    end process;


    ap_predicate_op69_load_state2_assign_proc : process(icmp_ln29_reg_519, trunc_ln229_reg_523)
    begin
                ap_predicate_op69_load_state2 <= ((trunc_ln229_reg_523 = ap_const_lv1_1) and (icmp_ln29_reg_519 = ap_const_lv1_0));
    end process;


    ap_predicate_op71_store_state2_assign_proc : process(icmp_ln29_reg_519, trunc_ln229_reg_523)
    begin
                ap_predicate_op71_store_state2 <= ((trunc_ln229_reg_523 = ap_const_lv1_1) and (icmp_ln29_reg_519 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_16_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_92)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_16 <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_i_16 <= i_fu_92;
        end if; 
    end process;


    ap_sig_allocacmp_p_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, empty_fu_88)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_p_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_p_load <= empty_fu_88;
        end if; 
    end process;

    i_17_fu_279_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_16) + unsigned(ap_const_lv11_1));
    icmp_ln29_fu_273_p2 <= "1" when (ap_sig_allocacmp_i_16 = ap_const_lv11_400) else "0";
    lhs_V_32_out <= lhs_V_32_fu_80;

    lhs_V_32_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln29_reg_519, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln29_reg_519 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lhs_V_32_out_ap_vld <= ap_const_logic_1;
        else 
            lhs_V_32_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_s_fu_386_p1 <= p_Val2_s_fu_96(1 - 1 downto 0);
    p_Val2_138_out <= p_Val2_135_fu_84;

    p_Val2_138_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln29_reg_519, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln29_reg_519 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_Val2_138_out_ap_vld <= ap_const_logic_1;
        else 
            p_Val2_138_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_out <= p_Val2_s_fu_96;

    p_Val2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln29_reg_519, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln29_reg_519 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_Val2_out_ap_vld <= ap_const_logic_1;
        else 
            p_Val2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pre_result_V_fu_426_p2 <= (zext_ln1043_fu_408_p1 xor xor_ln1544_fu_420_p2);
    r_11_fu_326_p4 <= addr_head_p_m_p_1_V_fu_298_p2(9 downto 1);
    r_s_fu_316_p4 <= addr_head_p_3_V_fu_292_p2(9 downto 1);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= zext_ln587_7_fu_434_p1(9 - 1 downto 0);

    rngMT19937ICN_uniformRNG_mt_even_0_V_address1_assign_proc : process(trunc_ln229_fu_288_p1, zext_ln587_fu_346_p1, zext_ln587_6_fu_352_p1, ap_condition_174)
    begin
        if ((ap_const_boolean_1 = ap_condition_174)) then
            if ((trunc_ln229_fu_288_p1 = ap_const_lv1_1)) then 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= zext_ln587_fu_346_p1(9 - 1 downto 0);
            elsif ((trunc_ln229_fu_288_p1 = ap_const_lv1_0)) then 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= zext_ln587_6_fu_352_p1(9 - 1 downto 0);
            else 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln29_fu_273_p2, ap_block_pp0_stage0_11001, trunc_ln229_fu_288_p1, ap_start_int)
    begin
        if ((((trunc_ln229_fu_288_p1 = ap_const_lv1_0) and (icmp_ln29_fu_273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln229_fu_288_p1 = ap_const_lv1_1) and (icmp_ln29_fu_273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= pre_result_V_fu_426_p2;

    rngMT19937ICN_uniformRNG_mt_even_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln29_reg_519, ap_block_pp0_stage0_11001, trunc_ln229_reg_523)
    begin
        if (((trunc_ln229_reg_523 = ap_const_lv1_0) and (icmp_ln29_reg_519 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= zext_ln587_7_fu_434_p1(9 - 1 downto 0);

    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1_assign_proc : process(trunc_ln229_fu_288_p1, zext_ln587_fu_346_p1, zext_ln587_6_fu_352_p1, ap_condition_174)
    begin
        if ((ap_const_boolean_1 = ap_condition_174)) then
            if ((trunc_ln229_fu_288_p1 = ap_const_lv1_1)) then 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= zext_ln587_6_fu_352_p1(9 - 1 downto 0);
            elsif ((trunc_ln229_fu_288_p1 = ap_const_lv1_0)) then 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= zext_ln587_fu_346_p1(9 - 1 downto 0);
            else 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln29_fu_273_p2, ap_block_pp0_stage0_11001, trunc_ln229_fu_288_p1, ap_start_int)
    begin
        if ((((trunc_ln229_fu_288_p1 = ap_const_lv1_0) and (icmp_ln29_fu_273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln229_fu_288_p1 = ap_const_lv1_1) and (icmp_ln29_fu_273_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 <= pre_result_V_fu_426_p2;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln29_reg_519, ap_block_pp0_stage0_11001, trunc_ln229_reg_523)
    begin
        if (((trunc_ln229_reg_523 = ap_const_lv1_1) and (icmp_ln29_reg_519 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out <= rngMT19937ICN_uniformRNG_x_k_p_2_V_2_fu_76;

    rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln29_reg_519, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln29_reg_519 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_x_k_p_2_V_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln722_fu_412_p3 <= 
        ap_const_lv32_9908B0DF when (p_Result_s_fu_386_p1(0) = '1') else 
        ap_const_lv32_0;
    tmp_V_fu_400_p3 <= (tmp_fu_378_p3 & tmp_s_fu_390_p4);
    tmp_fu_378_p3 <= p_Val2_135_fu_84(31 downto 31);
    tmp_s_fu_390_p4 <= p_Val2_s_fu_96(30 downto 1);
    trunc_ln229_fu_288_p1 <= ap_sig_allocacmp_p_load(1 - 1 downto 0);
    xor_ln1544_fu_420_p2 <= (select_ln722_fu_412_p3 xor lhs_V_32_fu_80);
    zext_ln1043_fu_408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_400_p3),32));
    zext_ln587_6_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_11_fu_326_p4),64));
    zext_ln587_7_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_12_reg_527),64));
    zext_ln587_fu_346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_s_fu_316_p4),64));
end behav;
