-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP_Modulation_Pipeline_VITIS_LOOP_51_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_x_k_p_0_V_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_1_V_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_m_V_3_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_x_k_p_2_V_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_we0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_even_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 : OUT STD_LOGIC;
    rngMT19937ICN_uniformRNG_mt_odd_0_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    rand_bipolar_3_0_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    rand_bipolar_3_0_out_ap_vld : OUT STD_LOGIC;
    rand_bipolar_2_0_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    rand_bipolar_2_0_out_ap_vld : OUT STD_LOGIC;
    rand_bipolar_1_0_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    rand_bipolar_1_0_out_ap_vld : OUT STD_LOGIC;
    rand_bipolar_0_0_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    rand_bipolar_0_0_out_ap_vld : OUT STD_LOGIC;
    rand_bipolar_load_11332_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    rand_bipolar_load_11332_out_ap_vld : OUT STD_LOGIC;
    rand_bipolar_load_11226_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    rand_bipolar_load_11226_out_ap_vld : OUT STD_LOGIC;
    rand_bipolar_load_11120_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    rand_bipolar_load_11120_out_ap_vld : OUT STD_LOGIC;
    rand_bipolar_load_11414_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    rand_bipolar_load_11414_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of TOP_Modulation_Pipeline_VITIS_LOOP_51_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_3FE0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111100000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv8_8E : STD_LOGIC_VECTOR (7 downto 0) := "10001110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_9908B0DF : STD_LOGIC_VECTOR (31 downto 0) := "10011001000010001011000011011111";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv64_BFF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln51_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal i_reg_1818 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln51_reg_1824 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln229_fu_453_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln229_reg_1828 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_0_0_05556_phi_fu_385_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_05556_reg_382 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_0_05544_phi_fu_396_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_05544_reg_393 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln587_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln587_6_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_7_fu_592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rngMT19937ICN_uniformRNG_x_k_p_2_V_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal lhs_V_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_15_fu_196 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln51_fu_443_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (3 downto 0);
    signal rand_bipolar_load_11414_fu_200 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_20_fu_1627_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rand_bipolar_load_11120_fu_204 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_17_fu_1571_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rand_bipolar_load_11226_fu_208 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_14_fu_1539_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rand_bipolar_load_11332_fu_212 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_11_fu_1499_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rand_bipolar_0_0_fu_216 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_15_fu_1451_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rand_bipolar_1_0_fu_220 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_11_fu_1411_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rand_bipolar_2_0_fu_224 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_7_fu_1363_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rand_bipolar_3_0_fu_228 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_3_fu_1307_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_135_fu_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal pre_result_V_15_fu_567_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_404_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln739_fu_449_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_head_p_3_V_fu_457_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal addr_head_p_m_p_1_V_fu_463_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_s_fu_469_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln_fu_479_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln587_fu_495_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_519_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_531_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_fu_541_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_239_fu_527_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1043_fu_549_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln1544_fu_561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln722_fu_553_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_575_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_13_fu_584_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_fu_625_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1691_fu_635_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_16_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_399_fu_645_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_653_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_400_fu_663_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_401_fu_671_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_679_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_402_fu_689_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_403_fu_697_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_705_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1542_fu_715_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_fu_719_p19 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_17_fu_759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_765_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_51_fu_775_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_52_fu_785_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_13_fu_795_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_18_fu_811_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_12_fu_817_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1691_4_fu_827_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pre_result_V_fu_831_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_236_fu_843_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_853_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln947_fu_865_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_871_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_404_fu_877_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln950_fu_897_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln950_fu_901_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln950_fu_907_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln950_fu_911_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln952_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln952_3_fu_923_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln952_fu_929_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_405_fu_941_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_237_fu_955_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln952_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln962_fu_975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln960_fu_893_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln962_fu_981_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln949_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln952_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln961_fu_999_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln961_fu_1005_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln961_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln949_fu_991_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln952_4_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln961_fu_1009_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln962_fu_985_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln961_fu_1015_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_1023_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln964_fu_1031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_13_fu_1035_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_16_fu_1041_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln946_fu_861_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln969_fu_1063_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_s_fu_1055_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln968_fu_1069_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln968_fu_1075_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln965_fu_1051_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1083_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_238_fu_1091_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_1108_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln54_1_fu_1124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_fu_1130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln54_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln57_fu_1148_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln938_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_1_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln54_1_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln57_1_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln54_2_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln54_fu_1169_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln57_2_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln54_3_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln54_1_fu_1189_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln54_1_fu_1217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_2_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln55_1_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_1_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln55_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln54_4_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln55_2_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln54_2_fu_1209_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln55_3_fu_1273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_fu_1265_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln55_4_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_1_fu_1279_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln55_5_fu_1301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_2_fu_1293_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_3_fu_1315_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_4_fu_1323_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_5_fu_1331_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_4_fu_1339_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_5_fu_1347_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_6_fu_1355_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_6_fu_1371_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_7_fu_1379_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_8_fu_1387_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_9_fu_1395_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_10_fu_1403_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_8_fu_1419_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_12_fu_1427_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_13_fu_1435_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_14_fu_1443_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_16_fu_1459_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_17_fu_1467_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_18_fu_1475_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_9_fu_1483_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_10_fu_1491_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_19_fu_1507_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_20_fu_1515_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_12_fu_1523_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_13_fu_1531_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_21_fu_1547_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_15_fu_1555_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_16_fu_1563_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_22_fu_1579_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_23_fu_1587_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_24_fu_1595_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln55_25_fu_1603_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_18_fu_1611_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln54_19_fu_1619_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op43_load_state1 : BOOLEAN;
    signal ap_enable_operation_43 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_predicate_op68_load_state2 : BOOLEAN;
    signal ap_enable_operation_68 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op76_store_state2 : BOOLEAN;
    signal ap_enable_operation_76 : BOOLEAN;
    signal ap_predicate_op45_load_state1 : BOOLEAN;
    signal ap_enable_operation_45 : BOOLEAN;
    signal ap_predicate_op69_load_state2 : BOOLEAN;
    signal ap_enable_operation_69 : BOOLEAN;
    signal ap_predicate_op71_store_state2 : BOOLEAN;
    signal ap_enable_operation_71 : BOOLEAN;
    signal ap_predicate_op47_load_state1 : BOOLEAN;
    signal ap_enable_operation_47 : BOOLEAN;
    signal ap_predicate_op73_load_state2 : BOOLEAN;
    signal ap_enable_operation_73 : BOOLEAN;
    signal ap_predicate_op49_load_state1 : BOOLEAN;
    signal ap_enable_operation_49 : BOOLEAN;
    signal ap_predicate_op74_load_state2 : BOOLEAN;
    signal ap_enable_operation_74 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1081 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component TOP_dcmp_64ns_64ns_1_1_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component TOP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    dcmp_64ns_64ns_1_1_no_dsp_1_U23 : component TOP_dcmp_64ns_64ns_1_1_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        din0 => tmp_18_fu_404_p0,
        din1 => ap_const_lv64_3FE0000000000000,
        opcode => ap_const_lv5_3,
        dout => tmp_18_fu_404_p2);

    flow_control_loop_pipe_sequential_init_U : component TOP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                if (((ap_loop_exit_ready = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                end if;
            end if; 
        end if;
    end process;

    i_15_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln51_fu_437_p2 = ap_const_lv1_0) and (ap_start_int = ap_const_logic_1))) then 
                    i_15_fu_196 <= add_ln51_fu_443_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_15_fu_196 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    lhs_V_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    lhs_V_fu_188 <= rngMT19937ICN_uniformRNG_x_k_p_m_V_3_reload;
                elsif (((icmp_ln51_reg_1824 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    lhs_V_fu_188 <= ap_phi_mux_p_0_0_05544_phi_fu_396_p4;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_135_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_Val2_135_fu_232 <= rngMT19937ICN_uniformRNG_x_k_p_1_V_3_reload;
                elsif (((icmp_ln51_reg_1824 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Val2_135_fu_232 <= rngMT19937ICN_uniformRNG_x_k_p_2_V_fu_184;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    p_Val2_s_fu_192 <= rngMT19937ICN_uniformRNG_x_k_p_0_V_3_reload;
                elsif (((icmp_ln51_reg_1824 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    p_Val2_s_fu_192 <= p_Val2_135_fu_232;
                end if;
            end if; 
        end if;
    end process;

    rngMT19937ICN_uniformRNG_x_k_p_2_V_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    rngMT19937ICN_uniformRNG_x_k_p_2_V_fu_184 <= rngMT19937ICN_uniformRNG_x_k_p_2_V_1_reload;
                elsif (((icmp_ln51_reg_1824 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    rngMT19937ICN_uniformRNG_x_k_p_2_V_fu_184 <= ap_phi_mux_p_0_0_05556_phi_fu_385_p4;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_1818 <= ap_sig_allocacmp_i;
                icmp_ln51_reg_1824 <= icmp_ln51_fu_437_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln51_reg_1824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                rand_bipolar_0_0_fu_216 <= select_ln55_15_fu_1451_p3;
                rand_bipolar_1_0_fu_220 <= select_ln55_11_fu_1411_p3;
                rand_bipolar_2_0_fu_224 <= select_ln55_7_fu_1363_p3;
                rand_bipolar_3_0_fu_228 <= select_ln55_3_fu_1307_p3;
                rand_bipolar_load_11120_fu_204 <= select_ln54_17_fu_1571_p3;
                rand_bipolar_load_11226_fu_208 <= select_ln54_14_fu_1539_p3;
                rand_bipolar_load_11332_fu_212 <= select_ln54_11_fu_1499_p3;
                rand_bipolar_load_11414_fu_200 <= select_ln54_20_fu_1627_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln51_fu_437_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln229_reg_1828 <= trunc_ln229_fu_453_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln51_fu_443_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv4_1));
    add_ln961_fu_999_p2 <= std_logic_vector(unsigned(sub_ln947_fu_865_p2) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln968_fu_1069_p2 <= std_logic_vector(unsigned(sub_ln969_fu_1063_p2) + unsigned(ap_const_lv11_1));
    addr_head_p_3_V_fu_457_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv4_3));
    addr_head_p_m_p_1_V_fu_463_p2 <= std_logic_vector(unsigned(zext_ln739_fu_449_p1) + unsigned(ap_const_lv8_8E));
    and_ln54_1_fu_1163_p2 <= (or_ln54_1_fu_1157_p2 and icmp_ln57_fu_1151_p2);
    and_ln54_2_fu_1183_p2 <= (or_ln54_1_fu_1157_p2 and icmp_ln57_1_fu_1177_p2);
    and_ln54_3_fu_1203_p2 <= (or_ln54_1_fu_1157_p2 and icmp_ln57_2_fu_1197_p2);
    and_ln54_4_fu_1223_p2 <= (xor_ln54_1_fu_1217_p2 and and_ln54_fu_1136_p2);
    and_ln54_fu_1136_p2 <= (tmp_18_fu_404_p2 and or_ln54_fu_1130_p2);
    and_ln55_1_fu_1247_p2 <= (icmp_ln55_fu_1229_p2 and icmp_ln55_2_fu_1241_p2);
    and_ln55_2_fu_1259_p2 <= (and_ln55_fu_1253_p2 and and_ln54_4_fu_1223_p2);
    and_ln55_3_fu_1273_p2 <= (icmp_ln57_fu_1151_p2 and and_ln54_4_fu_1223_p2);
    and_ln55_4_fu_1287_p2 <= (icmp_ln57_1_fu_1177_p2 and and_ln54_4_fu_1223_p2);
    and_ln55_5_fu_1301_p2 <= (icmp_ln57_2_fu_1197_p2 and and_ln54_4_fu_1223_p2);
    and_ln55_fu_1253_p2 <= (icmp_ln55_1_fu_1235_p2 and and_ln55_1_fu_1247_p2);
    and_ln952_4_fu_969_p2 <= (xor_ln952_fu_949_p2 and p_Result_237_fu_955_p3);
    and_ln952_fu_929_p2 <= (pre_result_V_fu_831_p2 and or_ln952_3_fu_923_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1081_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln51_fu_437_p2, ap_block_pp0_stage0, ap_start_int)
    begin
                ap_condition_1081 <= ((icmp_ln51_fu_437_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln51_fu_437_p2, ap_start_int)
    begin
        if (((icmp_ln51_fu_437_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_43_assign_proc : process(ap_predicate_op43_load_state1)
    begin
                ap_enable_operation_43 <= (ap_predicate_op43_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_45_assign_proc : process(ap_predicate_op45_load_state1)
    begin
                ap_enable_operation_45 <= (ap_predicate_op45_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_47_assign_proc : process(ap_predicate_op47_load_state1)
    begin
                ap_enable_operation_47 <= (ap_predicate_op47_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_49_assign_proc : process(ap_predicate_op49_load_state1)
    begin
                ap_enable_operation_49 <= (ap_predicate_op49_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_68_assign_proc : process(ap_predicate_op68_load_state2)
    begin
                ap_enable_operation_68 <= (ap_predicate_op68_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_69_assign_proc : process(ap_predicate_op69_load_state2)
    begin
                ap_enable_operation_69 <= (ap_predicate_op69_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_71_assign_proc : process(ap_predicate_op71_store_state2)
    begin
                ap_enable_operation_71 <= (ap_predicate_op71_store_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_73_assign_proc : process(ap_predicate_op73_load_state2)
    begin
                ap_enable_operation_73 <= (ap_predicate_op73_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_74_assign_proc : process(ap_predicate_op74_load_state2)
    begin
                ap_enable_operation_74 <= (ap_predicate_op74_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_76_assign_proc : process(ap_predicate_op76_store_state2)
    begin
                ap_enable_operation_76 <= (ap_predicate_op76_store_state2 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_start_int)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_p_0_0_05544_phi_fu_396_p4_assign_proc : process(rngMT19937ICN_uniformRNG_mt_even_0_V_q1, rngMT19937ICN_uniformRNG_mt_odd_0_V_q1, icmp_ln51_reg_1824, trunc_ln229_reg_1828, ap_phi_reg_pp0_iter1_p_0_0_05544_reg_393)
    begin
        if ((icmp_ln51_reg_1824 = ap_const_lv1_0)) then
            if ((trunc_ln229_reg_1828 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_05544_phi_fu_396_p4 <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
            elsif ((trunc_ln229_reg_1828 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_05544_phi_fu_396_p4 <= rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
            else 
                ap_phi_mux_p_0_0_05544_phi_fu_396_p4 <= ap_phi_reg_pp0_iter1_p_0_0_05544_reg_393;
            end if;
        else 
            ap_phi_mux_p_0_0_05544_phi_fu_396_p4 <= ap_phi_reg_pp0_iter1_p_0_0_05544_reg_393;
        end if; 
    end process;


    ap_phi_mux_p_0_0_05556_phi_fu_385_p4_assign_proc : process(rngMT19937ICN_uniformRNG_mt_even_0_V_q1, rngMT19937ICN_uniformRNG_mt_odd_0_V_q1, icmp_ln51_reg_1824, trunc_ln229_reg_1828, ap_phi_reg_pp0_iter1_p_0_0_05556_reg_382)
    begin
        if ((icmp_ln51_reg_1824 = ap_const_lv1_0)) then
            if ((trunc_ln229_reg_1828 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0_0_05556_phi_fu_385_p4 <= rngMT19937ICN_uniformRNG_mt_even_0_V_q1;
            elsif ((trunc_ln229_reg_1828 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0_0_05556_phi_fu_385_p4 <= rngMT19937ICN_uniformRNG_mt_odd_0_V_q1;
            else 
                ap_phi_mux_p_0_0_05556_phi_fu_385_p4 <= ap_phi_reg_pp0_iter1_p_0_0_05556_reg_382;
            end if;
        else 
            ap_phi_mux_p_0_0_05556_phi_fu_385_p4 <= ap_phi_reg_pp0_iter1_p_0_0_05556_reg_382;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_p_0_0_05544_reg_393 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_p_0_0_05556_reg_382 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op43_load_state1_assign_proc : process(icmp_ln51_fu_437_p2, trunc_ln229_fu_453_p1)
    begin
                ap_predicate_op43_load_state1 <= ((trunc_ln229_fu_453_p1 = ap_const_lv1_0) and (icmp_ln51_fu_437_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op45_load_state1_assign_proc : process(icmp_ln51_fu_437_p2, trunc_ln229_fu_453_p1)
    begin
                ap_predicate_op45_load_state1 <= ((trunc_ln229_fu_453_p1 = ap_const_lv1_0) and (icmp_ln51_fu_437_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op47_load_state1_assign_proc : process(icmp_ln51_fu_437_p2, trunc_ln229_fu_453_p1)
    begin
                ap_predicate_op47_load_state1 <= ((trunc_ln229_fu_453_p1 = ap_const_lv1_1) and (icmp_ln51_fu_437_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op49_load_state1_assign_proc : process(icmp_ln51_fu_437_p2, trunc_ln229_fu_453_p1)
    begin
                ap_predicate_op49_load_state1 <= ((trunc_ln229_fu_453_p1 = ap_const_lv1_1) and (icmp_ln51_fu_437_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op68_load_state2_assign_proc : process(icmp_ln51_reg_1824, trunc_ln229_reg_1828)
    begin
                ap_predicate_op68_load_state2 <= ((trunc_ln229_reg_1828 = ap_const_lv1_0) and (icmp_ln51_reg_1824 = ap_const_lv1_0));
    end process;


    ap_predicate_op69_load_state2_assign_proc : process(icmp_ln51_reg_1824, trunc_ln229_reg_1828)
    begin
                ap_predicate_op69_load_state2 <= ((trunc_ln229_reg_1828 = ap_const_lv1_0) and (icmp_ln51_reg_1824 = ap_const_lv1_0));
    end process;


    ap_predicate_op71_store_state2_assign_proc : process(icmp_ln51_reg_1824, trunc_ln229_reg_1828)
    begin
                ap_predicate_op71_store_state2 <= ((trunc_ln229_reg_1828 = ap_const_lv1_0) and (icmp_ln51_reg_1824 = ap_const_lv1_0));
    end process;


    ap_predicate_op73_load_state2_assign_proc : process(icmp_ln51_reg_1824, trunc_ln229_reg_1828)
    begin
                ap_predicate_op73_load_state2 <= ((trunc_ln229_reg_1828 = ap_const_lv1_1) and (icmp_ln51_reg_1824 = ap_const_lv1_0));
    end process;


    ap_predicate_op74_load_state2_assign_proc : process(icmp_ln51_reg_1824, trunc_ln229_reg_1828)
    begin
                ap_predicate_op74_load_state2 <= ((trunc_ln229_reg_1828 = ap_const_lv1_1) and (icmp_ln51_reg_1824 = ap_const_lv1_0));
    end process;


    ap_predicate_op76_store_state2_assign_proc : process(icmp_ln51_reg_1824, trunc_ln229_reg_1828)
    begin
                ap_predicate_op76_store_state2 <= ((trunc_ln229_reg_1828 = ap_const_lv1_1) and (icmp_ln51_reg_1824 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_15_fu_196)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i <= i_15_fu_196;
        end if; 
    end process;

    icmp_ln51_fu_437_p2 <= "1" when (ap_sig_allocacmp_i = ap_const_lv4_8) else "0";
    icmp_ln54_1_fu_1124_p2 <= "1" when (trunc_ln1_fu_1108_p4 = ap_const_lv52_0) else "0";
    icmp_ln54_fu_1118_p2 <= "0" when (select_ln968_fu_1075_p3 = ap_const_lv11_7FF) else "1";
    icmp_ln55_1_fu_1235_p2 <= "0" when (trunc_ln57_fu_1148_p1 = ap_const_lv2_1) else "1";
    icmp_ln55_2_fu_1241_p2 <= "0" when (trunc_ln57_fu_1148_p1 = ap_const_lv2_2) else "1";
    icmp_ln55_fu_1229_p2 <= "0" when (trunc_ln57_fu_1148_p1 = ap_const_lv2_0) else "1";
    icmp_ln57_1_fu_1177_p2 <= "1" when (trunc_ln57_fu_1148_p1 = ap_const_lv2_1) else "0";
    icmp_ln57_2_fu_1197_p2 <= "1" when (trunc_ln57_fu_1148_p1 = ap_const_lv2_0) else "0";
    icmp_ln57_fu_1151_p2 <= "1" when (trunc_ln57_fu_1148_p1 = ap_const_lv2_2) else "0";
    icmp_ln938_fu_837_p2 <= "1" when (zext_ln1691_4_fu_827_p1 = pre_result_V_18_fu_811_p2) else "0";
    icmp_ln949_fu_887_p2 <= "1" when (signed(tmp_404_fu_877_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln952_fu_935_p2 <= "0" when (and_ln952_fu_929_p2 = ap_const_lv32_0) else "1";
    icmp_ln961_fu_963_p2 <= "1" when (signed(lsb_index_fu_871_p2) > signed(ap_const_lv32_0)) else "0";
    
    l_fu_853_p3_proc : process(p_Result_236_fu_843_p4)
    begin
        l_fu_853_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_236_fu_843_p4(i) = '1' then
                l_fu_853_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_871_p2 <= std_logic_vector(unsigned(sub_ln947_fu_865_p2) + unsigned(ap_const_lv32_FFFFFFCB));
    lshr_ln950_fu_911_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln950_fu_907_p1(31-1 downto 0)))));
    lshr_ln961_fu_1009_p2 <= std_logic_vector(shift_right(unsigned(zext_ln960_fu_893_p1),to_integer(unsigned('0' & zext_ln961_fu_1005_p1(31-1 downto 0)))));
    m_13_fu_1035_p2 <= std_logic_vector(unsigned(m_fu_1023_p3) + unsigned(zext_ln964_fu_1031_p1));
    m_16_fu_1041_p4 <= m_13_fu_1035_p2(63 downto 1);
    m_fu_1023_p3 <= 
        lshr_ln961_fu_1009_p2 when (icmp_ln961_fu_963_p2(0) = '1') else 
        shl_ln962_fu_985_p2;
    or_ln54_1_fu_1157_p2 <= (xor_ln54_fu_1142_p2 or icmp_ln938_fu_837_p2);
    or_ln54_fu_1130_p2 <= (icmp_ln54_fu_1118_p2 or icmp_ln54_1_fu_1124_p2);
    or_ln952_3_fu_923_p2 <= (shl_ln952_fu_917_p2 or lshr_ln950_fu_911_p2);
    
    p_Result_236_fu_843_p4_proc : process(pre_result_V_fu_831_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_236_fu_843_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := pre_result_V_fu_831_p2;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_236_fu_843_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_236_fu_843_p4_i) := pre_result_V_fu_831_p2(32-1-p_Result_236_fu_843_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_236_fu_843_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_237_fu_955_p3 <= pre_result_V_fu_831_p2(to_integer(unsigned(lsb_index_fu_871_p2)) downto to_integer(unsigned(lsb_index_fu_871_p2))) when (to_integer(unsigned(lsb_index_fu_871_p2)) >= 0 and to_integer(unsigned(lsb_index_fu_871_p2)) <=31) else "-";
    p_Result_238_fu_1091_p5 <= (tmp_s_fu_1083_p3 & zext_ln965_fu_1051_p1(51 downto 0));
    p_Result_239_fu_527_p1 <= p_Val2_135_fu_232(1 - 1 downto 0);
    p_Result_s_fu_1055_p3 <= m_13_fu_1035_p2(54 downto 54);
    pre_result_V_15_fu_567_p2 <= (xor_ln1544_fu_561_p2 xor select_ln722_fu_553_p3);
    pre_result_V_16_fu_639_p2 <= (zext_ln1691_fu_635_p1 xor pre_result_V_15_fu_567_p2);
    pre_result_V_17_fu_759_p2 <= (ret_fu_719_p19 xor pre_result_V_16_fu_639_p2);
    pre_result_V_18_fu_811_p2 <= (ret_13_fu_795_p7 xor pre_result_V_17_fu_759_p2);
    pre_result_V_fu_831_p2 <= (zext_ln1691_4_fu_827_p1 xor pre_result_V_18_fu_811_p2);
    r_12_fu_817_p4 <= pre_result_V_18_fu_811_p2(31 downto 18);
    r_13_fu_584_p3 <= (ap_const_lv7_27 & tmp_46_fu_575_p4);
    r_fu_625_p4 <= pre_result_V_15_fu_567_p2(31 downto 11);
    r_s_fu_469_p4 <= addr_head_p_3_V_fu_457_p2(3 downto 1);
    rand_bipolar_0_0_out <= rand_bipolar_0_0_fu_216;

    rand_bipolar_0_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824)
    begin
        if (((icmp_ln51_reg_1824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rand_bipolar_0_0_out_ap_vld <= ap_const_logic_1;
        else 
            rand_bipolar_0_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rand_bipolar_1_0_out <= rand_bipolar_1_0_fu_220;

    rand_bipolar_1_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824)
    begin
        if (((icmp_ln51_reg_1824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rand_bipolar_1_0_out_ap_vld <= ap_const_logic_1;
        else 
            rand_bipolar_1_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rand_bipolar_2_0_out <= rand_bipolar_2_0_fu_224;

    rand_bipolar_2_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824)
    begin
        if (((icmp_ln51_reg_1824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rand_bipolar_2_0_out_ap_vld <= ap_const_logic_1;
        else 
            rand_bipolar_2_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rand_bipolar_3_0_out <= rand_bipolar_3_0_fu_228;

    rand_bipolar_3_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824)
    begin
        if (((icmp_ln51_reg_1824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rand_bipolar_3_0_out_ap_vld <= ap_const_logic_1;
        else 
            rand_bipolar_3_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rand_bipolar_load_11120_out <= rand_bipolar_load_11120_fu_204;

    rand_bipolar_load_11120_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824)
    begin
        if (((icmp_ln51_reg_1824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rand_bipolar_load_11120_out_ap_vld <= ap_const_logic_1;
        else 
            rand_bipolar_load_11120_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rand_bipolar_load_11226_out <= rand_bipolar_load_11226_fu_208;

    rand_bipolar_load_11226_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824)
    begin
        if (((icmp_ln51_reg_1824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rand_bipolar_load_11226_out_ap_vld <= ap_const_logic_1;
        else 
            rand_bipolar_load_11226_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rand_bipolar_load_11332_out <= rand_bipolar_load_11332_fu_212;

    rand_bipolar_load_11332_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824)
    begin
        if (((icmp_ln51_reg_1824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rand_bipolar_load_11332_out_ap_vld <= ap_const_logic_1;
        else 
            rand_bipolar_load_11332_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rand_bipolar_load_11414_out <= rand_bipolar_load_11414_fu_200;

    rand_bipolar_load_11414_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824)
    begin
        if (((icmp_ln51_reg_1824 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rand_bipolar_load_11414_out_ap_vld <= ap_const_logic_1;
        else 
            rand_bipolar_load_11414_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_13_fu_795_p7 <= (((((tmp_50_fu_765_p4 & ap_const_lv1_0) & tmp_51_fu_775_p4) & ap_const_lv3_0) & tmp_52_fu_785_p4) & ap_const_lv17_0);
    ret_fu_719_p19 <= (((((((((((((((((tmp_399_fu_645_p3 & ap_const_lv2_0) & tmp_47_fu_653_p4) & ap_const_lv1_0) & tmp_400_fu_663_p3) & ap_const_lv2_0) & tmp_401_fu_671_p3) & ap_const_lv1_0) & tmp_48_fu_679_p4) & ap_const_lv3_0) & tmp_402_fu_689_p3) & ap_const_lv1_0) & tmp_403_fu_697_p3) & ap_const_lv1_0) & tmp_49_fu_705_p4) & ap_const_lv1_0) & trunc_ln1542_fu_715_p1) & ap_const_lv7_0);
    rngMT19937ICN_uniformRNG_mt_even_0_V_address0 <= zext_ln587_7_fu_592_p1(9 - 1 downto 0);

    rngMT19937ICN_uniformRNG_mt_even_0_V_address1_assign_proc : process(trunc_ln229_fu_453_p1, zext_ln587_fu_489_p1, zext_ln587_6_fu_499_p1, ap_condition_1081)
    begin
        if ((ap_const_boolean_1 = ap_condition_1081)) then
            if ((trunc_ln229_fu_453_p1 = ap_const_lv1_1)) then 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= zext_ln587_fu_489_p1(9 - 1 downto 0);
            elsif ((trunc_ln229_fu_453_p1 = ap_const_lv1_0)) then 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= zext_ln587_6_fu_499_p1(9 - 1 downto 0);
            else 
                rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_even_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln51_fu_437_p2, ap_block_pp0_stage0_11001, trunc_ln229_fu_453_p1, ap_start_int)
    begin
        if ((((trunc_ln229_fu_453_p1 = ap_const_lv1_1) and (icmp_ln51_fu_437_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln229_fu_453_p1 = ap_const_lv1_0) and (icmp_ln51_fu_437_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_even_0_V_d0 <= pre_result_V_15_fu_567_p2;

    rngMT19937ICN_uniformRNG_mt_even_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824, trunc_ln229_reg_1828)
    begin
        if (((trunc_ln229_reg_1828 = ap_const_lv1_0) and (icmp_ln51_reg_1824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_even_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_address0 <= zext_ln587_7_fu_592_p1(9 - 1 downto 0);

    rngMT19937ICN_uniformRNG_mt_odd_0_V_address1_assign_proc : process(trunc_ln229_fu_453_p1, zext_ln587_fu_489_p1, zext_ln587_6_fu_499_p1, ap_condition_1081)
    begin
        if ((ap_const_boolean_1 = ap_condition_1081)) then
            if ((trunc_ln229_fu_453_p1 = ap_const_lv1_1)) then 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= zext_ln587_6_fu_499_p1(9 - 1 downto 0);
            elsif ((trunc_ln229_fu_453_p1 = ap_const_lv1_0)) then 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= zext_ln587_fu_489_p1(9 - 1 downto 0);
            else 
                rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln51_fu_437_p2, ap_block_pp0_stage0_11001, trunc_ln229_fu_453_p1, ap_start_int)
    begin
        if ((((trunc_ln229_fu_453_p1 = ap_const_lv1_1) and (icmp_ln51_fu_437_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln229_fu_453_p1 = ap_const_lv1_0) and (icmp_ln51_fu_437_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_d0 <= pre_result_V_15_fu_567_p2;

    rngMT19937ICN_uniformRNG_mt_odd_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln51_reg_1824, trunc_ln229_reg_1828)
    begin
        if (((trunc_ln229_reg_1828 = ap_const_lv1_1) and (icmp_ln51_reg_1824 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= ap_const_logic_1;
        else 
            rngMT19937ICN_uniformRNG_mt_odd_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln54_10_fu_1491_p3 <= 
        rand_bipolar_load_11332_fu_212 when (and_ln54_2_fu_1183_p2(0) = '1') else 
        select_ln54_9_fu_1483_p3;
    select_ln54_11_fu_1499_p3 <= 
        rand_bipolar_load_11332_fu_212 when (and_ln54_3_fu_1203_p2(0) = '1') else 
        select_ln54_10_fu_1491_p3;
    select_ln54_12_fu_1523_p3 <= 
        rand_bipolar_load_11226_fu_208 when (and_ln54_1_fu_1163_p2(0) = '1') else 
        select_ln55_20_fu_1515_p3;
    select_ln54_13_fu_1531_p3 <= 
        ap_const_lv64_BFF0000000000000 when (and_ln54_2_fu_1183_p2(0) = '1') else 
        select_ln54_12_fu_1523_p3;
    select_ln54_14_fu_1539_p3 <= 
        rand_bipolar_load_11226_fu_208 when (and_ln54_3_fu_1203_p2(0) = '1') else 
        select_ln54_13_fu_1531_p3;
    select_ln54_15_fu_1555_p3 <= 
        rand_bipolar_load_11120_fu_204 when (and_ln54_1_fu_1163_p2(0) = '1') else 
        select_ln55_21_fu_1547_p3;
    select_ln54_16_fu_1563_p3 <= 
        rand_bipolar_load_11120_fu_204 when (and_ln54_2_fu_1183_p2(0) = '1') else 
        select_ln54_15_fu_1555_p3;
    select_ln54_17_fu_1571_p3 <= 
        ap_const_lv64_BFF0000000000000 when (and_ln54_3_fu_1203_p2(0) = '1') else 
        select_ln54_16_fu_1563_p3;
    select_ln54_18_fu_1611_p3 <= 
        rand_bipolar_load_11414_fu_200 when (and_ln54_1_fu_1163_p2(0) = '1') else 
        select_ln55_25_fu_1603_p3;
    select_ln54_19_fu_1619_p3 <= 
        rand_bipolar_load_11414_fu_200 when (and_ln54_2_fu_1183_p2(0) = '1') else 
        select_ln54_18_fu_1611_p3;
    select_ln54_1_fu_1189_p3 <= 
        rand_bipolar_3_0_fu_228 when (and_ln54_2_fu_1183_p2(0) = '1') else 
        select_ln54_fu_1169_p3;
    select_ln54_20_fu_1627_p3 <= 
        rand_bipolar_load_11414_fu_200 when (and_ln54_3_fu_1203_p2(0) = '1') else 
        select_ln54_19_fu_1619_p3;
    select_ln54_2_fu_1209_p3 <= 
        rand_bipolar_3_0_fu_228 when (and_ln54_3_fu_1203_p2(0) = '1') else 
        select_ln54_1_fu_1189_p3;
    select_ln54_3_fu_1315_p3 <= 
        ap_const_lv64_BFF0000000000000 when (and_ln54_1_fu_1163_p2(0) = '1') else 
        rand_bipolar_2_0_fu_224;
    select_ln54_4_fu_1323_p3 <= 
        rand_bipolar_2_0_fu_224 when (and_ln54_2_fu_1183_p2(0) = '1') else 
        select_ln54_3_fu_1315_p3;
    select_ln54_5_fu_1331_p3 <= 
        rand_bipolar_2_0_fu_224 when (and_ln54_3_fu_1203_p2(0) = '1') else 
        select_ln54_4_fu_1323_p3;
    select_ln54_6_fu_1371_p3 <= 
        ap_const_lv64_BFF0000000000000 when (and_ln54_2_fu_1183_p2(0) = '1') else 
        rand_bipolar_1_0_fu_220;
    select_ln54_7_fu_1379_p3 <= 
        rand_bipolar_1_0_fu_220 when (and_ln54_3_fu_1203_p2(0) = '1') else 
        select_ln54_6_fu_1371_p3;
    select_ln54_8_fu_1419_p3 <= 
        ap_const_lv64_BFF0000000000000 when (and_ln54_3_fu_1203_p2(0) = '1') else 
        rand_bipolar_0_0_fu_216;
    select_ln54_9_fu_1483_p3 <= 
        ap_const_lv64_BFF0000000000000 when (and_ln54_1_fu_1163_p2(0) = '1') else 
        select_ln55_18_fu_1475_p3;
    select_ln54_fu_1169_p3 <= 
        rand_bipolar_3_0_fu_228 when (and_ln54_1_fu_1163_p2(0) = '1') else 
        ap_const_lv64_BFF0000000000000;
    select_ln55_10_fu_1403_p3 <= 
        ap_const_lv64_3FF0000000000000 when (and_ln55_4_fu_1287_p2(0) = '1') else 
        select_ln55_9_fu_1395_p3;
    select_ln55_11_fu_1411_p3 <= 
        rand_bipolar_1_0_fu_220 when (and_ln55_5_fu_1301_p2(0) = '1') else 
        select_ln55_10_fu_1403_p3;
    select_ln55_12_fu_1427_p3 <= 
        rand_bipolar_0_0_fu_216 when (and_ln55_2_fu_1259_p2(0) = '1') else 
        select_ln54_8_fu_1419_p3;
    select_ln55_13_fu_1435_p3 <= 
        rand_bipolar_0_0_fu_216 when (and_ln55_3_fu_1273_p2(0) = '1') else 
        select_ln55_12_fu_1427_p3;
    select_ln55_14_fu_1443_p3 <= 
        rand_bipolar_0_0_fu_216 when (and_ln55_4_fu_1287_p2(0) = '1') else 
        select_ln55_13_fu_1435_p3;
    select_ln55_15_fu_1451_p3 <= 
        ap_const_lv64_3FF0000000000000 when (and_ln55_5_fu_1301_p2(0) = '1') else 
        select_ln55_14_fu_1443_p3;
    select_ln55_16_fu_1459_p3 <= 
        ap_const_lv64_3FF0000000000000 when (and_ln55_3_fu_1273_p2(0) = '1') else 
        rand_bipolar_load_11332_fu_212;
    select_ln55_17_fu_1467_p3 <= 
        rand_bipolar_load_11332_fu_212 when (and_ln55_4_fu_1287_p2(0) = '1') else 
        select_ln55_16_fu_1459_p3;
    select_ln55_18_fu_1475_p3 <= 
        rand_bipolar_load_11332_fu_212 when (and_ln55_5_fu_1301_p2(0) = '1') else 
        select_ln55_17_fu_1467_p3;
    select_ln55_19_fu_1507_p3 <= 
        ap_const_lv64_3FF0000000000000 when (and_ln55_4_fu_1287_p2(0) = '1') else 
        rand_bipolar_load_11226_fu_208;
    select_ln55_1_fu_1279_p3 <= 
        rand_bipolar_3_0_fu_228 when (and_ln55_3_fu_1273_p2(0) = '1') else 
        select_ln55_fu_1265_p3;
    select_ln55_20_fu_1515_p3 <= 
        rand_bipolar_load_11226_fu_208 when (and_ln55_5_fu_1301_p2(0) = '1') else 
        select_ln55_19_fu_1507_p3;
    select_ln55_21_fu_1547_p3 <= 
        ap_const_lv64_3FF0000000000000 when (and_ln55_5_fu_1301_p2(0) = '1') else 
        rand_bipolar_load_11120_fu_204;
    select_ln55_22_fu_1579_p3 <= 
        ap_const_lv64_3FF0000000000000 when (and_ln55_2_fu_1259_p2(0) = '1') else 
        ap_const_lv64_BFF0000000000000;
    select_ln55_23_fu_1587_p3 <= 
        rand_bipolar_load_11414_fu_200 when (and_ln55_3_fu_1273_p2(0) = '1') else 
        select_ln55_22_fu_1579_p3;
    select_ln55_24_fu_1595_p3 <= 
        rand_bipolar_load_11414_fu_200 when (and_ln55_4_fu_1287_p2(0) = '1') else 
        select_ln55_23_fu_1587_p3;
    select_ln55_25_fu_1603_p3 <= 
        rand_bipolar_load_11414_fu_200 when (and_ln55_5_fu_1301_p2(0) = '1') else 
        select_ln55_24_fu_1595_p3;
    select_ln55_2_fu_1293_p3 <= 
        rand_bipolar_3_0_fu_228 when (and_ln55_4_fu_1287_p2(0) = '1') else 
        select_ln55_1_fu_1279_p3;
    select_ln55_3_fu_1307_p3 <= 
        rand_bipolar_3_0_fu_228 when (and_ln55_5_fu_1301_p2(0) = '1') else 
        select_ln55_2_fu_1293_p3;
    select_ln55_4_fu_1339_p3 <= 
        rand_bipolar_2_0_fu_224 when (and_ln55_2_fu_1259_p2(0) = '1') else 
        select_ln54_5_fu_1331_p3;
    select_ln55_5_fu_1347_p3 <= 
        ap_const_lv64_3FF0000000000000 when (and_ln55_3_fu_1273_p2(0) = '1') else 
        select_ln55_4_fu_1339_p3;
    select_ln55_6_fu_1355_p3 <= 
        rand_bipolar_2_0_fu_224 when (and_ln55_4_fu_1287_p2(0) = '1') else 
        select_ln55_5_fu_1347_p3;
    select_ln55_7_fu_1363_p3 <= 
        rand_bipolar_2_0_fu_224 when (and_ln55_5_fu_1301_p2(0) = '1') else 
        select_ln55_6_fu_1355_p3;
    select_ln55_8_fu_1387_p3 <= 
        rand_bipolar_1_0_fu_220 when (and_ln55_2_fu_1259_p2(0) = '1') else 
        select_ln54_7_fu_1379_p3;
    select_ln55_9_fu_1395_p3 <= 
        rand_bipolar_1_0_fu_220 when (and_ln55_3_fu_1273_p2(0) = '1') else 
        select_ln55_8_fu_1387_p3;
    select_ln55_fu_1265_p3 <= 
        ap_const_lv64_3FF0000000000000 when (and_ln55_2_fu_1259_p2(0) = '1') else 
        select_ln54_2_fu_1209_p3;
    select_ln722_fu_553_p3 <= 
        ap_const_lv32_9908B0DF when (p_Result_239_fu_527_p1(0) = '1') else 
        ap_const_lv32_0;
    select_ln949_fu_991_p3 <= 
        icmp_ln952_fu_935_p2 when (icmp_ln949_fu_887_p2(0) = '1') else 
        p_Result_237_fu_955_p3;
    select_ln961_fu_1015_p3 <= 
        select_ln949_fu_991_p3 when (icmp_ln961_fu_963_p2(0) = '1') else 
        and_ln952_4_fu_969_p2;
    select_ln968_fu_1075_p3 <= 
        add_ln968_fu_1069_p2 when (p_Result_s_fu_1055_p3(0) = '1') else 
        sub_ln969_fu_1063_p2;
        sext_ln587_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_479_p4),8));

    shl_ln952_fu_917_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_871_p2(31-1 downto 0)))));
    shl_ln962_fu_985_p2 <= std_logic_vector(shift_left(unsigned(zext_ln960_fu_893_p1),to_integer(unsigned('0' & zext_ln962_fu_981_p1(31-1 downto 0)))));
    sub_ln947_fu_865_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_853_p3));
    sub_ln950_fu_901_p2 <= std_logic_vector(unsigned(ap_const_lv6_16) - unsigned(trunc_ln950_fu_897_p1));
    sub_ln962_fu_975_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln947_fu_865_p2));
    sub_ln969_fu_1063_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FE) - unsigned(trunc_ln946_fu_861_p1));
    tmp_18_fu_404_p0 <= p_Result_238_fu_1091_p5;
    tmp_399_fu_645_p3 <= pre_result_V_16_fu_639_p2(24 downto 24);
    tmp_400_fu_663_p3 <= pre_result_V_16_fu_639_p2(17 downto 17);
    tmp_401_fu_671_p3 <= pre_result_V_16_fu_639_p2(14 downto 14);
    tmp_402_fu_689_p3 <= pre_result_V_16_fu_639_p2(7 downto 7);
    tmp_403_fu_697_p3 <= pre_result_V_16_fu_639_p2(5 downto 5);
    tmp_404_fu_877_p4 <= lsb_index_fu_871_p2(31 downto 1);
    tmp_405_fu_941_p3 <= lsb_index_fu_871_p2(31 downto 31);
    tmp_45_fu_531_p4 <= p_Val2_135_fu_232(30 downto 1);
    tmp_46_fu_575_p4 <= i_reg_1818(3 downto 1);
    tmp_47_fu_653_p4 <= pre_result_V_16_fu_639_p2(21 downto 19);
    tmp_48_fu_679_p4 <= pre_result_V_16_fu_639_p2(12 downto 11);
    tmp_49_fu_705_p4 <= pre_result_V_16_fu_639_p2(3 downto 2);
    tmp_50_fu_765_p4 <= pre_result_V_17_fu_759_p2(16 downto 14);
    tmp_51_fu_775_p4 <= pre_result_V_17_fu_759_p2(12 downto 7);
    tmp_52_fu_785_p4 <= pre_result_V_17_fu_759_p2(3 downto 2);
    tmp_V_fu_541_p3 <= (tmp_fu_519_p3 & tmp_45_fu_531_p4);
    tmp_fu_519_p3 <= p_Val2_s_fu_192(31 downto 31);
    tmp_s_fu_1083_p3 <= (ap_const_lv1_0 & select_ln968_fu_1075_p3);
    trunc_ln1542_fu_715_p1 <= pre_result_V_16_fu_639_p2(1 - 1 downto 0);
    trunc_ln1_fu_1108_p4 <= m_13_fu_1035_p2(52 downto 1);
    trunc_ln229_fu_453_p1 <= ap_sig_allocacmp_i(1 - 1 downto 0);
    trunc_ln57_fu_1148_p1 <= i_reg_1818(2 - 1 downto 0);
    trunc_ln946_fu_861_p1 <= l_fu_853_p3(11 - 1 downto 0);
    trunc_ln950_fu_897_p1 <= sub_ln947_fu_865_p2(6 - 1 downto 0);
    trunc_ln_fu_479_p4 <= addr_head_p_m_p_1_V_fu_463_p2(7 downto 1);
    xor_ln1544_fu_561_p2 <= (zext_ln1043_fu_549_p1 xor lhs_V_fu_188);
    xor_ln54_1_fu_1217_p2 <= (icmp_ln938_fu_837_p2 xor ap_const_lv1_1);
    xor_ln54_fu_1142_p2 <= (ap_const_lv1_1 xor and_ln54_fu_1136_p2);
    xor_ln952_fu_949_p2 <= (tmp_405_fu_941_p3 xor ap_const_lv1_1);
    zext_ln1043_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_541_p3),32));
    zext_ln1691_4_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_12_fu_817_p4),32));
    zext_ln1691_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_625_p4),32));
    zext_ln587_6_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln587_fu_495_p1),64));
    zext_ln587_7_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_13_fu_584_p3),64));
    zext_ln587_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_s_fu_469_p4),64));
    zext_ln739_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i),8));
    zext_ln950_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln950_fu_901_p2),32));
    zext_ln960_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pre_result_V_fu_831_p2),64));
    zext_ln961_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln961_fu_999_p2),64));
    zext_ln962_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln962_fu_975_p2),64));
    zext_ln964_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln961_fu_1015_p3),64));
    zext_ln965_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_16_fu_1041_p4),64));
end behav;
